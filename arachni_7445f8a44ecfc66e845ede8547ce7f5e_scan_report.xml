<?xml version="1.0"?>
<report xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Arachni/arachni/v1.5.1/components/reporters/xml/schema.xsd">
  <version>1.5.1</version>
  <seed>e726fec99e34eb4301257a91f6c15ec4</seed>
  <options>---
audit:
  parameter_values: true
  exclude_vector_patterns: []
  include_vector_patterns: []
  link_templates: []
browser_cluster:
  local_storage: {}
  wait_for_elements: {}
  pool_size: 6
  job_timeout: 25
  worker_time_to_live: 100
  ignore_images: false
  screen_width: 1600
  screen_height: 1200
datastore:
  report_path: 
  token: 7445f8a44ecfc66e845ede8547ce7f5e
http:
  user_agent: Arachni/v2.0dev
  request_timeout: 10000
  request_redirect_limit: 5
  request_concurrency: 20
  request_queue_size: 100
  request_headers: {}
  response_max_size: 500000
  cookies: {}
  authentication_type: auto
input:
  values: {}
  default_values:
    "(?i-mx:pass)": 5543!%arachni_secret
    "(?i-mx:name)": arachni_name
    "(?i-mx:mail)": arachni@email.gr
    "(?i-mx:amount)": '100'
    "(?i-mx:usr)": arachni_user
    "(?i-mx:id)": '1'
    "(?i-mx:txt)": arachni_text
    "(?i-mx:account)": '12'
    "(?i-mx:user)": arachni_user
    "(?i-mx:num)": '132'
  without_defaults: false
  force: false
scope:
  redundant_path_patterns: {}
  dom_depth_limit: 5
  exclude_file_extensions: []
  exclude_path_patterns: []
  exclude_content_patterns: []
  include_path_patterns: []
  restrict_paths: []
  extend_paths: []
  url_rewrites: {}
session:
  check_url: http://b3789e93786d.ngrok.io/admin
  check_pattern: "(?-mix:logout)"
checks:
- allowed_methods
- backdoors
- backup_directories
- code_injection
- csrf
- ldap_injection
- xxe
- xss
- no_sql_injection
- path_traversal
- htaccess_limit
- html_objects
- http_only_cookies
- http_put
- insecure_client_access_policy
- insecure_cookies
- insecure_cors_policy
- insecure_cross_domain_policy_access
- insecure_cross_domain_policy_headers
- interesting_responses
- backup_files
platforms: []
plugins:
  uniformity: {}
  autothrottle: {}
  autologin:
    url: http://b3789e93786d.ngrok.io/
    check: logout
    parameters: email=admin@admin.com&amp;password=password
  healthmap: {}
  timing_attacks: {}
  discovery: {}
no_fingerprinting: false
authorized_by: 
url: http://b3789e93786d.ngrok.io/
</options>
  <start_datetime>2020-11-02T17:38:25+08:00</start_datetime>
  <finish_datetime>2020-11-02T17:42:26+08:00</finish_datetime>
  <sitemap>
    <entry url="http://b3789e93786d.ngrok.io/" code="302"/>
    <entry url="http://b3789e93786d.ngrok.io/login" code="200"/>
    <entry url="http://b3789e93786d.ngrok.io/home" code="302"/>
    <entry url="http://b3789e93786d.ngrok.io/admin" code="200"/>
    <entry url="http://b3789e93786d.ngrok.io/admin/system-calendar" code="500"/>
    <entry url="http://b3789e93786d.ngrok.io/logout" code="405"/>
    <entry url="http://b3789e93786d.ngrok.io/css/custom.css" code="200"/>
    <entry url="http://b3789e93786d.ngrok.io/js/main.js" code="200"/>
    <entry url="http://b3789e93786d.ngrok.io/Pipeline.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/SetLocale.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/SystemCalendarController.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/Controller.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/ControllerDispatcher.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/Route.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/Router.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/AuthGates.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/_ignition/assets" code="200"/>
    <entry url="http://b3789e93786d.ngrok.io/Kernel.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/SubstituteBindings.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/Authenticate.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/VerifyCsrfToken.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/ShareErrorsFromSession.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/StartSession.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/AddQueuedCookiesToResponse.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/TransformsRequest.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/CheckForMaintenanceMode.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/ValidatePostSize.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/TrustProxies.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/app.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/RouteCollection.php" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/b3789e93786d.ngrok.io" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/index.php" code="302"/>
    <entry url="http://b3789e93786d.ngrok.io/v2.0dev" code="404"/>
    <entry url="http://b3789e93786d.ngrok.io/password/reset" code="302"/>
  </sitemap>
  <issues>
    <issue>
      <name>Interesting response</name>
      <description>
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.
</description>
      <remedy_guidance/>
      <remedy_code/>
      <severity>informational</severity>
      <check>
        <name>Interesting responses</name>
        <description>Logs all non 200 (OK) server responses.</description>
        <author>Tasos "Zapotek" Laskos &lt;tasos.laskos@arachni-scanner.com&gt;</author>
        <version>0.2.1</version>
        <shortname>interesting_responses</shortname>
      </check>
      <digest>2629795576</digest>
      <references>
        <reference title="w3.org" url="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"/>
      </references>
      <vector>
        <class>Arachni::Element::Server</class>
        <type>server</type>
        <url>http://b3789e93786d.ngrok.io/password/reset/Arachni-e726fec99e34eb4301257a91f6c15ec4</url>
        <action>http://b3789e93786d.ngrok.io/password/reset/Arachni-e726fec99e34eb4301257a91f6c15ec4</action>
      </vector>
      <remarks/>
      <page>
        <body>&lt;!doctype html&gt;
&lt;html class="theme-light"&gt;
&lt;head&gt;
    &lt;!-- Hide dumps asap --&gt;
    &lt;style&gt;
        pre.sf-dump {
            display: none !important;
        }
    &lt;/style&gt;

    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport"
          content="width=device-width, initial-scale=1.0"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;
    &lt;meta name="robots" content="noindex, nofollow"&gt;

    &lt;title&gt;&#x1F9E8; The PUT method is not supported for this route. Supported methods: GET, HEAD.&lt;/title&gt;

    
    &lt;link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css"&gt;

    &lt;script src="http://b3789e93786d.ngrok.io/_ignition/assets"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body class="scrollbar-lg"&gt;

&lt;script&gt;
    window.data = {"report":{"notifier":"Laravel Client","language":"PHP","framework_version":"6.0.3","language_version":"7.4.11","exception_class":"Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","seen_at":1604310146,"message":"The PUT method is not supported for this route. Supported methods: GET, HEAD.","glows":[],"solutions":[],"stacktrace":[{"line_number":256,"method":"methodNotAllowed","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"241":"","242":"        $this-\u003EmethodNotAllowed($methods, $request-\u003Emethod());","243":"    }","244":"","245":"    \/**","246":"     * Throw a method not allowed HTTP exception.","247":"     *","248":"     * @param  array  $others","249":"     * @param  string  $method","250":"     * @return void","251":"     *","252":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","253":"     *\/","254":"    protected function methodNotAllowed(array $others, $method)","255":"    {","256":"        throw new MethodNotAllowedHttpException(","257":"            $others,","258":"            sprintf(","259":"                \u0027The %s method is not supported for this route. Supported methods: %s.\u0027,","260":"                $method,","261":"                implode(\u0027, \u0027, $others)","262":"            )","263":"        );","264":"    }","265":"","266":"    \/**","267":"     * Get routes from the collection by method.","268":"     *","269":"     * @param  string|null  $method","270":"     * @return array","271":"     *\/"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":242,"method":"getRouteForMethods","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"227":"     *","228":"     * @param  \\Illuminate\\Http\\Request  $request","229":"     * @param  array  $methods","230":"     * @return \\Illuminate\\Routing\\Route","231":"     *","232":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","233":"     *\/","234":"    protected function getRouteForMethods($request, array $methods)","235":"    {","236":"        if ($request-\u003Emethod() === \u0027OPTIONS\u0027) {","237":"            return (new Route(\u0027OPTIONS\u0027, $request-\u003Epath(), function () use ($methods) {","238":"                return new Response(\u0027\u0027, 200, [\u0027Allow\u0027 =\u003E implode(\u0027,\u0027, $methods)]);","239":"            }))-\u003Ebind($request);","240":"        }","241":"","242":"        $this-\u003EmethodNotAllowed($methods, $request-\u003Emethod());","243":"    }","244":"","245":"    \/**","246":"     * Throw a method not allowed HTTP exception.","247":"     *","248":"     * @param  array  $others","249":"     * @param  string  $method","250":"     * @return void","251":"     *","252":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","253":"     *\/","254":"    protected function methodNotAllowed(array $others, $method)","255":"    {","256":"        throw new MethodNotAllowedHttpException(","257":"            $others,"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":176,"method":"match","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"161":"        \/\/ First, we will see if we can find a matching route for this current request","162":"        \/\/ method. If we can, great, we can just return it so that it can be called","163":"        \/\/ by the consumer. Otherwise we will check for routes with another verb.","164":"        $route = $this-\u003EmatchAgainstRoutes($routes, $request);","165":"","166":"        if (! is_null($route)) {","167":"            return $route-\u003Ebind($request);","168":"        }","169":"","170":"        \/\/ If no route was found we will now check if a matching route is specified by","171":"        \/\/ another HTTP verb. If it is we will need to throw a MethodNotAllowed and","172":"        \/\/ inform the user agent of which HTTP verb it should use for this route.","173":"        $others = $this-\u003EcheckForAlternateVerbs($request);","174":"","175":"        if (count($others) \u003E 0) {","176":"            return $this-\u003EgetRouteForMethods($request, $others);","177":"        }","178":"","179":"        throw new NotFoundHttpException;","180":"    }","181":"","182":"    \/**","183":"     * Determine if a route in the array matches the request.","184":"     *","185":"     * @param  array  $routes","186":"     * @param  \\Illuminate\\Http\\Request  $request","187":"     * @param  bool  $includingMethod","188":"     * @return \\Illuminate\\Routing\\Route|null","189":"     *\/","190":"    protected function matchAgainstRoutes(array $routes, $request, $includingMethod = true)","191":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":634,"method":"findRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request.","628":"     *","629":"     * @param  \\Illuminate\\Http\\Request  $request","630":"     * @return \\Illuminate\\Routing\\Route","631":"     *\/","632":"    protected function findRoute($request)","633":"    {","634":"        $this-\u003Ecurrent = $route = $this-\u003Eroutes-\u003Ematch($request);","635":"","636":"        $this-\u003Econtainer-\u003Einstance(Route::class, $route);","637":"","638":"        return $route;","639":"    }","640":"","641":"    \/**","642":"     * Return the response for the given route.","643":"     *","644":"     * @param  \\Illuminate\\Http\\Request  $request","645":"     * @param  \\Illuminate\\Routing\\Route  $route","646":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","647":"     *\/","648":"    protected function runRoute(Request $request, Route $route)","649":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":623,"method":"dispatchToRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request.","628":"     *","629":"     * @param  \\Illuminate\\Http\\Request  $request","630":"     * @return \\Illuminate\\Routing\\Route","631":"     *\/","632":"    protected function findRoute($request)","633":"    {","634":"        $this-\u003Ecurrent = $route = $this-\u003Eroutes-\u003Ematch($request);","635":"","636":"        $this-\u003Econtainer-\u003Einstance(Route::class, $route);","637":"","638":"        return $route;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":612,"method":"dispatch","class":"Illuminate\\Routing\\Router","code_snippet":{"597":"        $route = tap($this-\u003Eroutes-\u003EgetByName($name))-\u003Ebind($this-\u003EcurrentRequest);","598":"","599":"        return $this-\u003ErunRoute($this-\u003EcurrentRequest, $route);","600":"    }","601":"","602":"    \/**","603":"     * Dispatch the request to the application.","604":"     *","605":"     * @param  \\Illuminate\\Http\\Request  $request","606":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","607":"     *\/","608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request."},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":176,"method":"Illuminate\\Foundation\\Http\\{closure}","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**","167":"     * Get the route dispatcher callback.","168":"     *","169":"     * @return \\Closure","170":"     *\/","171":"    protected function dispatchToRouter()","172":"    {","173":"        return function ($request) {","174":"            $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","175":"","176":"            return $this-\u003Erouter-\u003Edispatch($request);","177":"        };","178":"    }","179":"","180":"    \/**","181":"     * Call the terminate method on any terminable middleware.","182":"     *","183":"     * @param  \\Illuminate\\Http\\Request  $request","184":"     * @param  \\Illuminate\\Http\\Response  $response","185":"     * @return void","186":"     *\/","187":"    public function terminate($request, $response)","188":"    {","189":"        $this-\u003EterminateMiddleware($request, $response);","190":"","191":"        $this-\u003Eapp-\u003Eterminate();"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":130,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**","121":"     * Get the final piece of the Closure onion.","122":"     *","123":"     * @param  \\Closure  $destination","124":"     * @return \\Closure","125":"     *\/","126":"    protected function prepareDestination(Closure $destination)","127":"    {","128":"        return function ($passable) use ($destination) {","129":"            try {","130":"                return $destination($passable);","131":"            } catch (Exception $e) {","132":"                return $this-\u003EhandleException($passable, $e);","133":"            } catch (Throwable $e) {","134":"                return $this-\u003EhandleException($passable, new FatalThrowableError($e));","135":"            }","136":"        };","137":"    }","138":"","139":"    \/**","140":"     * Get a Closure that represents a slice of the application onion.","141":"     *","142":"     * @return \\Closure","143":"     *\/","144":"    protected function carry()","145":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":62,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode","code_snippet":{"47":"    {","48":"        if ($this-\u003Eapp-\u003EisDownForMaintenance()) {","49":"            $data = json_decode(file_get_contents($this-\u003Eapp-\u003EstoragePath().\u0027\/framework\/down\u0027), true);","50":"","51":"            if (isset($data[\u0027allowed\u0027]) \u0026\u0026 IpUtils::checkIp($request-\u003Eip(), (array) $data[\u0027allowed\u0027])) {","52":"                return $next($request);","53":"            }","54":"","55":"            if ($this-\u003EinExceptArray($request)) {","56":"                return $next($request);","57":"            }","58":"","59":"            throw new MaintenanceModeException($data[\u0027time\u0027], $data[\u0027retry\u0027], $data[\u0027message\u0027]);","60":"        }","61":"","62":"        return $next($request);","63":"    }","64":"","65":"    \/**","66":"     * Determine if the request has a URI that should be accessible in maintenance mode.","67":"     *","68":"     * @param  \\Illuminate\\Http\\Request  $request","69":"     * @return bool","70":"     *\/","71":"    protected function inExceptArray($request)","72":"    {","73":"        foreach ($this-\u003Eexcept as $except) {","74":"            if ($except !== \u0027\/\u0027) {","75":"                $except = trim($except, \u0027\/\u0027);","76":"            }","77":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/CheckForMaintenanceMode.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":27,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize","code_snippet":{"12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *","17":"     * @throws \\Illuminate\\Http\\Exceptions\\PostTooLargeException","18":"     *\/","19":"    public function handle($request, Closure $next)","20":"    {","21":"        $max = $this-\u003EgetPostMaxSize();","22":"","23":"        if ($max \u003E 0 \u0026\u0026 $request-\u003Eserver(\u0027CONTENT_LENGTH\u0027) \u003E $max) {","24":"            throw new PostTooLargeException;","25":"        }","26":"","27":"        return $next($request);","28":"    }","29":"","30":"    \/**","31":"     * Determine the server \u0027post_max_size\u0027 as bytes.","32":"     *","33":"     * @return int","34":"     *\/","35":"    protected function getPostMaxSize()","36":"    {","37":"        if (is_numeric($postMaxSize = ini_get(\u0027post_max_size\u0027))) {","38":"            return (int) $postMaxSize;","39":"        }","40":"","41":"        $metric = strtoupper(substr($postMaxSize, -1));","42":"        $postMaxSize = (int) $postMaxSize;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/ValidatePostSize.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":57,"method":"handle","class":"Fideloper\\Proxy\\TrustProxies","code_snippet":{"42":"    \/**","43":"     * Handle an incoming request.","44":"     *","45":"     * @param \\Illuminate\\Http\\Request $request","46":"     * @param \\Closure                 $next","47":"     *","48":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\HttpException","49":"     *","50":"     * @return mixed","51":"     *\/","52":"    public function handle(Request $request, Closure $next)","53":"    {","54":"        $request::setTrustedProxies([], $this-\u003EgetTrustedHeaderNames()); \/\/ Reset trusted proxies between requests","55":"        $this-\u003EsetTrustedProxyIpAddresses($request);","56":"","57":"        return $next($request);","58":"    }","59":"","60":"    \/**","61":"     * Sets the trusted proxies on the request to the value of trustedproxy.proxies","62":"     *","63":"     * @param \\Illuminate\\Http\\Request $request","64":"     *\/","65":"    protected function setTrustedProxyIpAddresses(Request $request)","66":"    {","67":"        $trustedIps = $this-\u003Eproxies ?: $this-\u003Econfig-\u003Eget(\u0027trustedproxy.proxies\u0027);","68":"","69":"        \/\/ Trust any IP address that calls us","70":"        \/\/ `**` for backwards compatibility, but is deprecated","71":"        if ($trustedIps === \u0027*\u0027 || $trustedIps === \u0027**\u0027) {","72":"            return $this-\u003EsetTrustedProxyIpAddressesToTheCallingIp($request);"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/fideloper\/proxy\/src\/TrustProxies.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":105,"method":"then","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"90":"        return $this;","91":"    }","92":"","93":"    \/**","94":"     * Run the pipeline with a final destination callback.","95":"     *","96":"     * @param  \\Closure  $destination","97":"     * @return mixed","98":"     *\/","99":"    public function then(Closure $destination)","100":"    {","101":"        $pipeline = array_reduce(","102":"            array_reverse($this-\u003Epipes), $this-\u003Ecarry(), $this-\u003EprepareDestination($destination)","103":"        );","104":"","105":"        return $pipeline($this-\u003Epassable);","106":"    }","107":"","108":"    \/**","109":"     * Run the pipeline and return the result.","110":"     *","111":"     * @return mixed","112":"     *\/","113":"    public function thenReturn()","114":"    {","115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":151,"method":"sendRequestThroughRouter","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"136":"     *","137":"     * @param  \\Illuminate\\Http\\Request  $request","138":"     * @return \\Illuminate\\Http\\Response","139":"     *\/","140":"    protected function sendRequestThroughRouter($request)","141":"    {","142":"        $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","143":"","144":"        Facade::clearResolvedInstance(\u0027request\u0027);","145":"","146":"        $this-\u003Ebootstrap();","147":"","148":"        return (new Pipeline($this-\u003Eapp))","149":"                    -\u003Esend($request)","150":"                    -\u003Ethrough($this-\u003Eapp-\u003EshouldSkipMiddleware() ? [] : $this-\u003Emiddleware)","151":"                    -\u003Ethen($this-\u003EdispatchToRouter());","152":"    }","153":"","154":"    \/**","155":"     * Bootstrap the application for HTTP requests.","156":"     *","157":"     * @return void","158":"     *\/","159":"    public function bootstrap()","160":"    {","161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":116,"method":"handle","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"101":"            $router-\u003EaliasMiddleware($key, $middleware);","102":"        }","103":"    }","104":"","105":"    \/**","106":"     * Handle an incoming HTTP request.","107":"     *","108":"     * @param  \\Illuminate\\Http\\Request  $request","109":"     * @return \\Illuminate\\Http\\Response","110":"     *\/","111":"    public function handle($request)","112":"    {","113":"        try {","114":"            $request-\u003EenableHttpMethodParameterOverride();","115":"","116":"            $response = $this-\u003EsendRequestThroughRouter($request);","117":"        } catch (Exception $e) {","118":"            $this-\u003EreportException($e);","119":"","120":"            $response = $this-\u003ErenderException($request, $e);","121":"        } catch (Throwable $e) {","122":"            $this-\u003EreportException($e = new FatalThrowableError($e));","123":"","124":"            $response = $this-\u003ErenderException($request, $e);","125":"        }","126":"","127":"        $this-\u003Eapp[\u0027events\u0027]-\u003Edispatch(","128":"            new Events\\RequestHandled($request, $response)","129":"        );","130":"","131":"        return $response;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":55,"method":"[top]","class":null,"code_snippet":{"31":"| We need to illuminate PHP development, so let us turn on the lights.","32":"| This bootstraps the framework and gets it ready for use, then it","33":"| will load up this application so that we can run it and send","34":"| the responses back to the browser and delight our users.","35":"|","36":"*\/","37":"","38":"$app = require_once __DIR__.\u0027\/..\/bootstrap\/app.php\u0027;","39":"","40":"\/*","41":"|--------------------------------------------------------------------------","42":"| Run The Application","43":"|--------------------------------------------------------------------------","44":"|","45":"| Once we have the application, we can handle the incoming request","46":"| through the kernel, and send the associated response back to","47":"| the client\u0027s browser allowing them to enjoy the creative","48":"| and wonderful application we have prepared for them.","49":"|","50":"*\/","51":"","52":"$kernel = $app-\u003Emake(Illuminate\\Contracts\\Http\\Kernel::class);","53":"","54":"$response = $kernel-\u003Ehandle(","55":"    $request = Illuminate\\Http\\Request::capture()","56":");","57":"","58":"$response-\u003Esend();","59":"","60":"$kernel-\u003Eterminate($request, $response);","61":""},"file":"\/home\/vagrant\/ProjectLaravel\/public\/index.php"}],"context":{"request":{"url":"http:\/\/b3789e93786d.ngrok.io\/password\/reset\/Arachni-e726fec99e34eb4301257a91f6c15ec4","ip":null,"method":"PUT","useragent":"Arachni\/v2.0dev"},"request_data":{"queryString":[],"body":[],"files":[]},"headers":{"x-forwarded-for":["115.134.146.242"],"expect":["100-continue"],"content-length":["55"],"cookie":["XSRF-TOKEN=QRs4IarMN7jPMB9Im6m9jsFOfzr8JIdN7FkCGpqd;laravel_session=AExY214uRb9ZUzGN0HTkcxXaljdpHKdONsQvLeK4"],"x-arachni-scan-seed":["e726fec99e34eb4301257a91f6c15ec4"],"accept-language":["en-US,en;q=0.8,he;q=0.6"],"accept":["text\/html,application\/xhtml+xml,application\/xml;q=0.9,*\/*;q=0.8"],"user-agent":["Arachni\/v2.0dev"],"accept-encoding":["gzip, deflate"],"host":["b3789e93786d.ngrok.io"],"content-type":[""]},"cookies":{"XSRF-TOKEN":"QRs4IarMN7jPMB9Im6m9jsFOfzr8JIdN7FkCGpqd","laravel_session":"AExY214uRb9ZUzGN0HTkcxXaljdpHKdONsQvLeK4"},"session":[],"route":{"route":null,"routeParameters":[],"controllerAction":null,"middleware":[]},"user":[],"env":{"laravel_version":"6.0.3","laravel_locale":"en","laravel_config_cached":false,"php_version":"7.4.11"},"logs":[],"dumps":[],"queries":[],"git":{"hash":"","message":"","tag":"","remote":"","isDirty":false}},"stage":"local","message_level":null,"application_path":"\/home\/vagrant\/ProjectLaravel"},"config":{"editor":"phpstorm","remoteSitesPath":"","localSitesPath":"","theme":"light","enableShareButton":true,"enableRunnableSolutions":true,"directorySeparator":"\/"},"solutions":[],"telescopeUrl":null,"shareEndpoint":"http:\/\/b3789e93786d.ngrok.io\/_ignition\/share-report"}
    window.tabs = [];
&lt;/script&gt;

&lt;noscript&gt;&lt;pre&gt;Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: The PUT method is not supported for this route. Supported methods: GET, HEAD. in file /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php on line 256

#0 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php(242): Illuminate\Routing\RouteCollection-&gt;methodNotAllowed()
#1 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php(176): Illuminate\Routing\RouteCollection-&gt;getRouteForMethods()
#2 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(634): Illuminate\Routing\RouteCollection-&gt;match()
#3 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(623): Illuminate\Routing\Router-&gt;findRoute()
#4 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(612): Illuminate\Routing\Router-&gt;dispatchToRoute()
#5 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(176): Illuminate\Routing\Router-&gt;dispatch()
#6 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(130): Illuminate\Foundation\Http\Kernel-&gt;Illuminate\Foundation\Http\{closure}()
#7 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#8 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#9 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php(62): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#10 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode-&gt;handle()
#11 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php(27): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#12 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\ValidatePostSize-&gt;handle()
#13 /home/vagrant/ProjectLaravel/vendor/fideloper/proxy/src/TrustProxies.php(57): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#14 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Fideloper\Proxy\TrustProxies-&gt;handle()
#15 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#16 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#17 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(105): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#18 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(151): Illuminate\Pipeline\Pipeline-&gt;then()
#19 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(116): Illuminate\Foundation\Http\Kernel-&gt;sendRequestThroughRouter()
#20 /home/vagrant/ProjectLaravel/public/index.php(55): Illuminate\Foundation\Http\Kernel-&gt;handle()
#21 {main}
&lt;/pre&gt;&lt;/noscript&gt;

&lt;div id="app"&gt;&lt;/div&gt;

&lt;script&gt;
    window.Ignition = window.ignite(window.data);
&lt;/script&gt;
&lt;script&gt;
    Ignition.start();
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;
</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/password/reset/Arachni-e726fec99e34eb4301257a91f6c15ec4</url>
          <method>put</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=QRs4IarMN7jPMB9Im6m9jsFOfzr8JIdN7FkCGpqd;laravel_session=AExY214uRb9ZUzGN0HTkcxXaljdpHKdONsQvLeK4"/>
          </headers>
          <body>Created by Arachni. PUTe726fec99e34eb4301257a91f6c15ec4</body>
          <raw>PUT /password/reset/Arachni-e726fec99e34eb4301257a91f6c15ec4 HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=QRs4IarMN7jPMB9Im6m9jsFOfzr8JIdN7FkCGpqd;laravel_session=AExY214uRb9ZUzGN0HTkcxXaljdpHKdONsQvLeK4&#xD;
Content-Length: 55&#xD;
Expect: 100-continue&#xD;
&#xD;
Created by Arachni. PUTe726fec99e34eb4301257a91f6c15ec4</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/password/reset/Arachni-e726fec99e34eb4301257a91f6c15ec4</url>
          <code>405</code>
          <ip_address>3.22.30.40</ip_address>
          <time>2.296</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Allow" value="GET, HEAD"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:42:26 GMT"/>
          </headers>
          <body>&lt;!doctype html&gt;
&lt;html class="theme-light"&gt;
&lt;head&gt;
    &lt;!-- Hide dumps asap --&gt;
    &lt;style&gt;
        pre.sf-dump {
            display: none !important;
        }
    &lt;/style&gt;

    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport"
          content="width=device-width, initial-scale=1.0"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;
    &lt;meta name="robots" content="noindex, nofollow"&gt;

    &lt;title&gt;&#x1F9E8; The PUT method is not supported for this route. Supported methods: GET, HEAD.&lt;/title&gt;

    
    &lt;link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css"&gt;

    &lt;script src="http://b3789e93786d.ngrok.io/_ignition/assets"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body class="scrollbar-lg"&gt;

&lt;script&gt;
    window.data = {"report":{"notifier":"Laravel Client","language":"PHP","framework_version":"6.0.3","language_version":"7.4.11","exception_class":"Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","seen_at":1604310146,"message":"The PUT method is not supported for this route. Supported methods: GET, HEAD.","glows":[],"solutions":[],"stacktrace":[{"line_number":256,"method":"methodNotAllowed","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"241":"","242":"        $this-\u003EmethodNotAllowed($methods, $request-\u003Emethod());","243":"    }","244":"","245":"    \/**","246":"     * Throw a method not allowed HTTP exception.","247":"     *","248":"     * @param  array  $others","249":"     * @param  string  $method","250":"     * @return void","251":"     *","252":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","253":"     *\/","254":"    protected function methodNotAllowed(array $others, $method)","255":"    {","256":"        throw new MethodNotAllowedHttpException(","257":"            $others,","258":"            sprintf(","259":"                \u0027The %s method is not supported for this route. Supported methods: %s.\u0027,","260":"                $method,","261":"                implode(\u0027, \u0027, $others)","262":"            )","263":"        );","264":"    }","265":"","266":"    \/**","267":"     * Get routes from the collection by method.","268":"     *","269":"     * @param  string|null  $method","270":"     * @return array","271":"     *\/"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":242,"method":"getRouteForMethods","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"227":"     *","228":"     * @param  \\Illuminate\\Http\\Request  $request","229":"     * @param  array  $methods","230":"     * @return \\Illuminate\\Routing\\Route","231":"     *","232":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","233":"     *\/","234":"    protected function getRouteForMethods($request, array $methods)","235":"    {","236":"        if ($request-\u003Emethod() === \u0027OPTIONS\u0027) {","237":"            return (new Route(\u0027OPTIONS\u0027, $request-\u003Epath(), function () use ($methods) {","238":"                return new Response(\u0027\u0027, 200, [\u0027Allow\u0027 =\u003E implode(\u0027,\u0027, $methods)]);","239":"            }))-\u003Ebind($request);","240":"        }","241":"","242":"        $this-\u003EmethodNotAllowed($methods, $request-\u003Emethod());","243":"    }","244":"","245":"    \/**","246":"     * Throw a method not allowed HTTP exception.","247":"     *","248":"     * @param  array  $others","249":"     * @param  string  $method","250":"     * @return void","251":"     *","252":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","253":"     *\/","254":"    protected function methodNotAllowed(array $others, $method)","255":"    {","256":"        throw new MethodNotAllowedHttpException(","257":"            $others,"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":176,"method":"match","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"161":"        \/\/ First, we will see if we can find a matching route for this current request","162":"        \/\/ method. If we can, great, we can just return it so that it can be called","163":"        \/\/ by the consumer. Otherwise we will check for routes with another verb.","164":"        $route = $this-\u003EmatchAgainstRoutes($routes, $request);","165":"","166":"        if (! is_null($route)) {","167":"            return $route-\u003Ebind($request);","168":"        }","169":"","170":"        \/\/ If no route was found we will now check if a matching route is specified by","171":"        \/\/ another HTTP verb. If it is we will need to throw a MethodNotAllowed and","172":"        \/\/ inform the user agent of which HTTP verb it should use for this route.","173":"        $others = $this-\u003EcheckForAlternateVerbs($request);","174":"","175":"        if (count($others) \u003E 0) {","176":"            return $this-\u003EgetRouteForMethods($request, $others);","177":"        }","178":"","179":"        throw new NotFoundHttpException;","180":"    }","181":"","182":"    \/**","183":"     * Determine if a route in the array matches the request.","184":"     *","185":"     * @param  array  $routes","186":"     * @param  \\Illuminate\\Http\\Request  $request","187":"     * @param  bool  $includingMethod","188":"     * @return \\Illuminate\\Routing\\Route|null","189":"     *\/","190":"    protected function matchAgainstRoutes(array $routes, $request, $includingMethod = true)","191":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":634,"method":"findRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request.","628":"     *","629":"     * @param  \\Illuminate\\Http\\Request  $request","630":"     * @return \\Illuminate\\Routing\\Route","631":"     *\/","632":"    protected function findRoute($request)","633":"    {","634":"        $this-\u003Ecurrent = $route = $this-\u003Eroutes-\u003Ematch($request);","635":"","636":"        $this-\u003Econtainer-\u003Einstance(Route::class, $route);","637":"","638":"        return $route;","639":"    }","640":"","641":"    \/**","642":"     * Return the response for the given route.","643":"     *","644":"     * @param  \\Illuminate\\Http\\Request  $request","645":"     * @param  \\Illuminate\\Routing\\Route  $route","646":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","647":"     *\/","648":"    protected function runRoute(Request $request, Route $route)","649":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":623,"method":"dispatchToRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request.","628":"     *","629":"     * @param  \\Illuminate\\Http\\Request  $request","630":"     * @return \\Illuminate\\Routing\\Route","631":"     *\/","632":"    protected function findRoute($request)","633":"    {","634":"        $this-\u003Ecurrent = $route = $this-\u003Eroutes-\u003Ematch($request);","635":"","636":"        $this-\u003Econtainer-\u003Einstance(Route::class, $route);","637":"","638":"        return $route;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":612,"method":"dispatch","class":"Illuminate\\Routing\\Router","code_snippet":{"597":"        $route = tap($this-\u003Eroutes-\u003EgetByName($name))-\u003Ebind($this-\u003EcurrentRequest);","598":"","599":"        return $this-\u003ErunRoute($this-\u003EcurrentRequest, $route);","600":"    }","601":"","602":"    \/**","603":"     * Dispatch the request to the application.","604":"     *","605":"     * @param  \\Illuminate\\Http\\Request  $request","606":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","607":"     *\/","608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request."},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":176,"method":"Illuminate\\Foundation\\Http\\{closure}","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**","167":"     * Get the route dispatcher callback.","168":"     *","169":"     * @return \\Closure","170":"     *\/","171":"    protected function dispatchToRouter()","172":"    {","173":"        return function ($request) {","174":"            $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","175":"","176":"            return $this-\u003Erouter-\u003Edispatch($request);","177":"        };","178":"    }","179":"","180":"    \/**","181":"     * Call the terminate method on any terminable middleware.","182":"     *","183":"     * @param  \\Illuminate\\Http\\Request  $request","184":"     * @param  \\Illuminate\\Http\\Response  $response","185":"     * @return void","186":"     *\/","187":"    public function terminate($request, $response)","188":"    {","189":"        $this-\u003EterminateMiddleware($request, $response);","190":"","191":"        $this-\u003Eapp-\u003Eterminate();"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":130,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**","121":"     * Get the final piece of the Closure onion.","122":"     *","123":"     * @param  \\Closure  $destination","124":"     * @return \\Closure","125":"     *\/","126":"    protected function prepareDestination(Closure $destination)","127":"    {","128":"        return function ($passable) use ($destination) {","129":"            try {","130":"                return $destination($passable);","131":"            } catch (Exception $e) {","132":"                return $this-\u003EhandleException($passable, $e);","133":"            } catch (Throwable $e) {","134":"                return $this-\u003EhandleException($passable, new FatalThrowableError($e));","135":"            }","136":"        };","137":"    }","138":"","139":"    \/**","140":"     * Get a Closure that represents a slice of the application onion.","141":"     *","142":"     * @return \\Closure","143":"     *\/","144":"    protected function carry()","145":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":62,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode","code_snippet":{"47":"    {","48":"        if ($this-\u003Eapp-\u003EisDownForMaintenance()) {","49":"            $data = json_decode(file_get_contents($this-\u003Eapp-\u003EstoragePath().\u0027\/framework\/down\u0027), true);","50":"","51":"            if (isset($data[\u0027allowed\u0027]) \u0026\u0026 IpUtils::checkIp($request-\u003Eip(), (array) $data[\u0027allowed\u0027])) {","52":"                return $next($request);","53":"            }","54":"","55":"            if ($this-\u003EinExceptArray($request)) {","56":"                return $next($request);","57":"            }","58":"","59":"            throw new MaintenanceModeException($data[\u0027time\u0027], $data[\u0027retry\u0027], $data[\u0027message\u0027]);","60":"        }","61":"","62":"        return $next($request);","63":"    }","64":"","65":"    \/**","66":"     * Determine if the request has a URI that should be accessible in maintenance mode.","67":"     *","68":"     * @param  \\Illuminate\\Http\\Request  $request","69":"     * @return bool","70":"     *\/","71":"    protected function inExceptArray($request)","72":"    {","73":"        foreach ($this-\u003Eexcept as $except) {","74":"            if ($except !== \u0027\/\u0027) {","75":"                $except = trim($except, \u0027\/\u0027);","76":"            }","77":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/CheckForMaintenanceMode.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":27,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize","code_snippet":{"12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *","17":"     * @throws \\Illuminate\\Http\\Exceptions\\PostTooLargeException","18":"     *\/","19":"    public function handle($request, Closure $next)","20":"    {","21":"        $max = $this-\u003EgetPostMaxSize();","22":"","23":"        if ($max \u003E 0 \u0026\u0026 $request-\u003Eserver(\u0027CONTENT_LENGTH\u0027) \u003E $max) {","24":"            throw new PostTooLargeException;","25":"        }","26":"","27":"        return $next($request);","28":"    }","29":"","30":"    \/**","31":"     * Determine the server \u0027post_max_size\u0027 as bytes.","32":"     *","33":"     * @return int","34":"     *\/","35":"    protected function getPostMaxSize()","36":"    {","37":"        if (is_numeric($postMaxSize = ini_get(\u0027post_max_size\u0027))) {","38":"            return (int) $postMaxSize;","39":"        }","40":"","41":"        $metric = strtoupper(substr($postMaxSize, -1));","42":"        $postMaxSize = (int) $postMaxSize;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/ValidatePostSize.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":57,"method":"handle","class":"Fideloper\\Proxy\\TrustProxies","code_snippet":{"42":"    \/**","43":"     * Handle an incoming request.","44":"     *","45":"     * @param \\Illuminate\\Http\\Request $request","46":"     * @param \\Closure                 $next","47":"     *","48":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\HttpException","49":"     *","50":"     * @return mixed","51":"     *\/","52":"    public function handle(Request $request, Closure $next)","53":"    {","54":"        $request::setTrustedProxies([], $this-\u003EgetTrustedHeaderNames()); \/\/ Reset trusted proxies between requests","55":"        $this-\u003EsetTrustedProxyIpAddresses($request);","56":"","57":"        return $next($request);","58":"    }","59":"","60":"    \/**","61":"     * Sets the trusted proxies on the request to the value of trustedproxy.proxies","62":"     *","63":"     * @param \\Illuminate\\Http\\Request $request","64":"     *\/","65":"    protected function setTrustedProxyIpAddresses(Request $request)","66":"    {","67":"        $trustedIps = $this-\u003Eproxies ?: $this-\u003Econfig-\u003Eget(\u0027trustedproxy.proxies\u0027);","68":"","69":"        \/\/ Trust any IP address that calls us","70":"        \/\/ `**` for backwards compatibility, but is deprecated","71":"        if ($trustedIps === \u0027*\u0027 || $trustedIps === \u0027**\u0027) {","72":"            return $this-\u003EsetTrustedProxyIpAddressesToTheCallingIp($request);"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/fideloper\/proxy\/src\/TrustProxies.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":105,"method":"then","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"90":"        return $this;","91":"    }","92":"","93":"    \/**","94":"     * Run the pipeline with a final destination callback.","95":"     *","96":"     * @param  \\Closure  $destination","97":"     * @return mixed","98":"     *\/","99":"    public function then(Closure $destination)","100":"    {","101":"        $pipeline = array_reduce(","102":"            array_reverse($this-\u003Epipes), $this-\u003Ecarry(), $this-\u003EprepareDestination($destination)","103":"        );","104":"","105":"        return $pipeline($this-\u003Epassable);","106":"    }","107":"","108":"    \/**","109":"     * Run the pipeline and return the result.","110":"     *","111":"     * @return mixed","112":"     *\/","113":"    public function thenReturn()","114":"    {","115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":151,"method":"sendRequestThroughRouter","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"136":"     *","137":"     * @param  \\Illuminate\\Http\\Request  $request","138":"     * @return \\Illuminate\\Http\\Response","139":"     *\/","140":"    protected function sendRequestThroughRouter($request)","141":"    {","142":"        $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","143":"","144":"        Facade::clearResolvedInstance(\u0027request\u0027);","145":"","146":"        $this-\u003Ebootstrap();","147":"","148":"        return (new Pipeline($this-\u003Eapp))","149":"                    -\u003Esend($request)","150":"                    -\u003Ethrough($this-\u003Eapp-\u003EshouldSkipMiddleware() ? [] : $this-\u003Emiddleware)","151":"                    -\u003Ethen($this-\u003EdispatchToRouter());","152":"    }","153":"","154":"    \/**","155":"     * Bootstrap the application for HTTP requests.","156":"     *","157":"     * @return void","158":"     *\/","159":"    public function bootstrap()","160":"    {","161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":116,"method":"handle","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"101":"            $router-\u003EaliasMiddleware($key, $middleware);","102":"        }","103":"    }","104":"","105":"    \/**","106":"     * Handle an incoming HTTP request.","107":"     *","108":"     * @param  \\Illuminate\\Http\\Request  $request","109":"     * @return \\Illuminate\\Http\\Response","110":"     *\/","111":"    public function handle($request)","112":"    {","113":"        try {","114":"            $request-\u003EenableHttpMethodParameterOverride();","115":"","116":"            $response = $this-\u003EsendRequestThroughRouter($request);","117":"        } catch (Exception $e) {","118":"            $this-\u003EreportException($e);","119":"","120":"            $response = $this-\u003ErenderException($request, $e);","121":"        } catch (Throwable $e) {","122":"            $this-\u003EreportException($e = new FatalThrowableError($e));","123":"","124":"            $response = $this-\u003ErenderException($request, $e);","125":"        }","126":"","127":"        $this-\u003Eapp[\u0027events\u0027]-\u003Edispatch(","128":"            new Events\\RequestHandled($request, $response)","129":"        );","130":"","131":"        return $response;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":55,"method":"[top]","class":null,"code_snippet":{"31":"| We need to illuminate PHP development, so let us turn on the lights.","32":"| This bootstraps the framework and gets it ready for use, then it","33":"| will load up this application so that we can run it and send","34":"| the responses back to the browser and delight our users.","35":"|","36":"*\/","37":"","38":"$app = require_once __DIR__.\u0027\/..\/bootstrap\/app.php\u0027;","39":"","40":"\/*","41":"|--------------------------------------------------------------------------","42":"| Run The Application","43":"|--------------------------------------------------------------------------","44":"|","45":"| Once we have the application, we can handle the incoming request","46":"| through the kernel, and send the associated response back to","47":"| the client\u0027s browser allowing them to enjoy the creative","48":"| and wonderful application we have prepared for them.","49":"|","50":"*\/","51":"","52":"$kernel = $app-\u003Emake(Illuminate\\Contracts\\Http\\Kernel::class);","53":"","54":"$response = $kernel-\u003Ehandle(","55":"    $request = Illuminate\\Http\\Request::capture()","56":");","57":"","58":"$response-\u003Esend();","59":"","60":"$kernel-\u003Eterminate($request, $response);","61":""},"file":"\/home\/vagrant\/ProjectLaravel\/public\/index.php"}],"context":{"request":{"url":"http:\/\/b3789e93786d.ngrok.io\/password\/reset\/Arachni-e726fec99e34eb4301257a91f6c15ec4","ip":null,"method":"PUT","useragent":"Arachni\/v2.0dev"},"request_data":{"queryString":[],"body":[],"files":[]},"headers":{"x-forwarded-for":["115.134.146.242"],"expect":["100-continue"],"content-length":["55"],"cookie":["XSRF-TOKEN=QRs4IarMN7jPMB9Im6m9jsFOfzr8JIdN7FkCGpqd;laravel_session=AExY214uRb9ZUzGN0HTkcxXaljdpHKdONsQvLeK4"],"x-arachni-scan-seed":["e726fec99e34eb4301257a91f6c15ec4"],"accept-language":["en-US,en;q=0.8,he;q=0.6"],"accept":["text\/html,application\/xhtml+xml,application\/xml;q=0.9,*\/*;q=0.8"],"user-agent":["Arachni\/v2.0dev"],"accept-encoding":["gzip, deflate"],"host":["b3789e93786d.ngrok.io"],"content-type":[""]},"cookies":{"XSRF-TOKEN":"QRs4IarMN7jPMB9Im6m9jsFOfzr8JIdN7FkCGpqd","laravel_session":"AExY214uRb9ZUzGN0HTkcxXaljdpHKdONsQvLeK4"},"session":[],"route":{"route":null,"routeParameters":[],"controllerAction":null,"middleware":[]},"user":[],"env":{"laravel_version":"6.0.3","laravel_locale":"en","laravel_config_cached":false,"php_version":"7.4.11"},"logs":[],"dumps":[],"queries":[],"git":{"hash":"","message":"","tag":"","remote":"","isDirty":false}},"stage":"local","message_level":null,"application_path":"\/home\/vagrant\/ProjectLaravel"},"config":{"editor":"phpstorm","remoteSitesPath":"","localSitesPath":"","theme":"light","enableShareButton":true,"enableRunnableSolutions":true,"directorySeparator":"\/"},"solutions":[],"telescopeUrl":null,"shareEndpoint":"http:\/\/b3789e93786d.ngrok.io\/_ignition\/share-report"}
    window.tabs = [];
&lt;/script&gt;

&lt;noscript&gt;&lt;pre&gt;Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: The PUT method is not supported for this route. Supported methods: GET, HEAD. in file /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php on line 256

#0 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php(242): Illuminate\Routing\RouteCollection-&gt;methodNotAllowed()
#1 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php(176): Illuminate\Routing\RouteCollection-&gt;getRouteForMethods()
#2 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(634): Illuminate\Routing\RouteCollection-&gt;match()
#3 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(623): Illuminate\Routing\Router-&gt;findRoute()
#4 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(612): Illuminate\Routing\Router-&gt;dispatchToRoute()
#5 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(176): Illuminate\Routing\Router-&gt;dispatch()
#6 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(130): Illuminate\Foundation\Http\Kernel-&gt;Illuminate\Foundation\Http\{closure}()
#7 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#8 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#9 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php(62): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#10 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode-&gt;handle()
#11 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php(27): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#12 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\ValidatePostSize-&gt;handle()
#13 /home/vagrant/ProjectLaravel/vendor/fideloper/proxy/src/TrustProxies.php(57): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#14 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Fideloper\Proxy\TrustProxies-&gt;handle()
#15 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#16 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#17 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(105): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#18 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(151): Illuminate\Pipeline\Pipeline-&gt;then()
#19 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(116): Illuminate\Foundation\Http\Kernel-&gt;sendRequestThroughRouter()
#20 /home/vagrant/ProjectLaravel/public/index.php(55): Illuminate\Foundation\Http\Kernel-&gt;handle()
#21 {main}
&lt;/pre&gt;&lt;/noscript&gt;

&lt;div id="app"&gt;&lt;/div&gt;

&lt;script&gt;
    window.Ignition = window.ignite(window.data);
&lt;/script&gt;
&lt;script&gt;
    Ignition.start();
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;
</body>
          <raw_headers>HTTP/1.1 100 Continue&#xD;
&#xD;
HTTP/1.1 405 Method Not Allowed&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
allow: GET, HEAD&#xD;
Cache-Control: no-cache, private&#xD;
date: Mon, 02 Nov 2020 09:42:26 GMT&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/password/reset/Arachni-e726fec99e34eb4301257a91f6c15ec4</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </page>
      <referring_page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>GET / HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/</url>
          <code>302</code>
          <ip_address>3.14.182.203</ip_address>
          <time>1.031</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:38:56 GMT"/>
            <header name="Location" value="/login"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:38:56 GMT&#xD;
Location: /login&#xD;
Set-Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </referring_page>
      <signature/>
      <proof>HTTP/1.1 100 Continue</proof>
      <trusted>true</trusted>
      <platform_type/>
      <platform_name/>
    </issue>
    <issue>
      <name>Interesting response</name>
      <description>
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.
</description>
      <remedy_guidance/>
      <remedy_code/>
      <severity>informational</severity>
      <check>
        <name>Interesting responses</name>
        <description>Logs all non 200 (OK) server responses.</description>
        <author>Tasos "Zapotek" Laskos &lt;tasos.laskos@arachni-scanner.com&gt;</author>
        <version>0.2.1</version>
        <shortname>interesting_responses</shortname>
      </check>
      <digest>554003465</digest>
      <references>
        <reference title="w3.org" url="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"/>
      </references>
      <vector>
        <class>Arachni::Element::Server</class>
        <type>server</type>
        <url>http://b3789e93786d.ngrok.io/index.php</url>
        <action>http://b3789e93786d.ngrok.io/index.php</action>
      </vector>
      <remarks/>
      <page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/index.php</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=QRs4IarMN7jPMB9Im6m9jsFOfzr8JIdN7FkCGpqd;laravel_session=AExY214uRb9ZUzGN0HTkcxXaljdpHKdONsQvLeK4"/>
          </headers>
          <body/>
          <raw>GET /index.php HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=QRs4IarMN7jPMB9Im6m9jsFOfzr8JIdN7FkCGpqd;laravel_session=AExY214uRb9ZUzGN0HTkcxXaljdpHKdONsQvLeK4&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/index.php</url>
          <code>302</code>
          <ip_address>3.14.182.203</ip_address>
          <time>0.812</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:42:17 GMT"/>
            <header name="Location" value="/login"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=QRs4IarMN7jPMB9Im6m9jsFOfzr8JIdN7FkCGpqd; expires=Mon, 02-Nov-2020 11:42:17 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=AExY214uRb9ZUzGN0HTkcxXaljdpHKdONsQvLeK4; expires=Mon, 02-Nov-2020 11:42:17 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:42:17 GMT&#xD;
Location: /login&#xD;
Set-Cookie: XSRF-TOKEN=QRs4IarMN7jPMB9Im6m9jsFOfzr8JIdN7FkCGpqd; expires=Mon, 02-Nov-2020 11:42:17 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=AExY214uRb9ZUzGN0HTkcxXaljdpHKdONsQvLeK4; expires=Mon, 02-Nov-2020 11:42:17 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/index.php</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </page>
      <referring_page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>GET / HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/</url>
          <code>302</code>
          <ip_address>3.14.182.203</ip_address>
          <time>1.031</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:38:56 GMT"/>
            <header name="Location" value="/login"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:38:56 GMT&#xD;
Location: /login&#xD;
Set-Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </referring_page>
      <signature/>
      <proof>HTTP/1.1 302 Found</proof>
      <trusted>true</trusted>
      <platform_type/>
      <platform_name/>
    </issue>
    <issue>
      <name>Interesting response</name>
      <description>
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.
</description>
      <remedy_guidance/>
      <remedy_code/>
      <severity>informational</severity>
      <check>
        <name>Interesting responses</name>
        <description>Logs all non 200 (OK) server responses.</description>
        <author>Tasos "Zapotek" Laskos &lt;tasos.laskos@arachni-scanner.com&gt;</author>
        <version>0.2.1</version>
        <shortname>interesting_responses</shortname>
      </check>
      <digest>1224776063</digest>
      <references>
        <reference title="w3.org" url="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"/>
      </references>
      <vector>
        <class>Arachni::Element::Server</class>
        <type>server</type>
        <url>http://b3789e93786d.ngrok.io/admin</url>
        <action>http://b3789e93786d.ngrok.io/admin</action>
      </vector>
      <remarks/>
      <page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=http://b3789e93786d.ngrok.io/login" /&gt;

        &lt;title&gt;Redirecting to http://b3789e93786d.ngrok.io/login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="http://b3789e93786d.ngrok.io/login"&gt;http://b3789e93786d.ngrok.io/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/admin</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="Referer" value="http://b3789e93786d.ngrok.io/admin"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Cookie" value="XSRF-TOKEN=jAylbxYY9hXqsFk9Am4OJpSh0kA5ScimghJD3prm;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
            <header name="Accept-Language" value="en-US,*"/>
            <header name="Host" value="b3789e93786d.ngrok.io"/>
          </headers>
          <body/>
          <raw>GET /admin HTTP/1.1&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Referer: http://b3789e93786d.ngrok.io/admin&#xD;
Cookie: XSRF-TOKEN=jAylbxYY9hXqsFk9Am4OJpSh0kA5ScimghJD3prm;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
Accept-Language: en-US,*&#xD;
Host: b3789e93786d.ngrok.io&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/admin</url>
          <code>302</code>
          <ip_address>3.17.7.232</ip_address>
          <time>1.172</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:39:21 GMT"/>
            <header name="Location" value="http://b3789e93786d.ngrok.io/login"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=jAylbxYY9hXqsFk9Am4OJpSh0kA5ScimghJD3prm; expires=Mon, 02-Nov-2020 11:39:21 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:39:21 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=http://b3789e93786d.ngrok.io/login" /&gt;

        &lt;title&gt;Redirecting to http://b3789e93786d.ngrok.io/login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="http://b3789e93786d.ngrok.io/login"&gt;http://b3789e93786d.ngrok.io/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:39:21 GMT&#xD;
Location: http://b3789e93786d.ngrok.io/login&#xD;
Set-Cookie: XSRF-TOKEN=jAylbxYY9hXqsFk9Am4OJpSh0kA5ScimghJD3prm; expires=Mon, 02-Nov-2020 11:39:21 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:39:21 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/admin</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </page>
      <referring_page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>GET / HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/</url>
          <code>302</code>
          <ip_address>3.14.182.203</ip_address>
          <time>1.031</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:38:56 GMT"/>
            <header name="Location" value="/login"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:38:56 GMT&#xD;
Location: /login&#xD;
Set-Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </referring_page>
      <signature/>
      <proof>HTTP/1.1 302 Found</proof>
      <trusted>true</trusted>
      <platform_type/>
      <platform_name/>
    </issue>
    <issue>
      <name>Interesting response</name>
      <description>
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.
</description>
      <remedy_guidance/>
      <remedy_code/>
      <severity>informational</severity>
      <check>
        <name>Interesting responses</name>
        <description>Logs all non 200 (OK) server responses.</description>
        <author>Tasos "Zapotek" Laskos &lt;tasos.laskos@arachni-scanner.com&gt;</author>
        <version>0.2.1</version>
        <shortname>interesting_responses</shortname>
      </check>
      <digest>3246485802</digest>
      <references>
        <reference title="w3.org" url="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"/>
      </references>
      <vector>
        <class>Arachni::Element::Server</class>
        <type>server</type>
        <url>http://b3789e93786d.ngrok.io/logout</url>
        <action>http://b3789e93786d.ngrok.io/logout</action>
      </vector>
      <remarks/>
      <page>
        <body>&lt;!doctype html&gt;
&lt;html class="theme-light"&gt;
&lt;head&gt;
    &lt;!-- Hide dumps asap --&gt;
    &lt;style&gt;
        pre.sf-dump {
            display: none !important;
        }
    &lt;/style&gt;

    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport"
          content="width=device-width, initial-scale=1.0"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;
    &lt;meta name="robots" content="noindex, nofollow"&gt;

    &lt;title&gt;&#x1F9E8; The GET method is not supported for this route. Supported methods: POST.&lt;/title&gt;

    
    &lt;link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css"&gt;

    &lt;script src="http://b3789e93786d.ngrok.io/_ignition/assets"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body class="scrollbar-lg"&gt;

&lt;script&gt;
    window.data = {"report":{"notifier":"Laravel Client","language":"PHP","framework_version":"6.0.3","language_version":"7.4.11","exception_class":"Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","seen_at":1604309959,"message":"The GET method is not supported for this route. Supported methods: POST.","glows":[],"solutions":[],"stacktrace":[{"line_number":256,"method":"methodNotAllowed","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"241":"","242":"        $this-\u003EmethodNotAllowed($methods, $request-\u003Emethod());","243":"    }","244":"","245":"    \/**","246":"     * Throw a method not allowed HTTP exception.","247":"     *","248":"     * @param  array  $others","249":"     * @param  string  $method","250":"     * @return void","251":"     *","252":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","253":"     *\/","254":"    protected function methodNotAllowed(array $others, $method)","255":"    {","256":"        throw new MethodNotAllowedHttpException(","257":"            $others,","258":"            sprintf(","259":"                \u0027The %s method is not supported for this route. Supported methods: %s.\u0027,","260":"                $method,","261":"                implode(\u0027, \u0027, $others)","262":"            )","263":"        );","264":"    }","265":"","266":"    \/**","267":"     * Get routes from the collection by method.","268":"     *","269":"     * @param  string|null  $method","270":"     * @return array","271":"     *\/"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":242,"method":"getRouteForMethods","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"227":"     *","228":"     * @param  \\Illuminate\\Http\\Request  $request","229":"     * @param  array  $methods","230":"     * @return \\Illuminate\\Routing\\Route","231":"     *","232":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","233":"     *\/","234":"    protected function getRouteForMethods($request, array $methods)","235":"    {","236":"        if ($request-\u003Emethod() === \u0027OPTIONS\u0027) {","237":"            return (new Route(\u0027OPTIONS\u0027, $request-\u003Epath(), function () use ($methods) {","238":"                return new Response(\u0027\u0027, 200, [\u0027Allow\u0027 =\u003E implode(\u0027,\u0027, $methods)]);","239":"            }))-\u003Ebind($request);","240":"        }","241":"","242":"        $this-\u003EmethodNotAllowed($methods, $request-\u003Emethod());","243":"    }","244":"","245":"    \/**","246":"     * Throw a method not allowed HTTP exception.","247":"     *","248":"     * @param  array  $others","249":"     * @param  string  $method","250":"     * @return void","251":"     *","252":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","253":"     *\/","254":"    protected function methodNotAllowed(array $others, $method)","255":"    {","256":"        throw new MethodNotAllowedHttpException(","257":"            $others,"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":176,"method":"match","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"161":"        \/\/ First, we will see if we can find a matching route for this current request","162":"        \/\/ method. If we can, great, we can just return it so that it can be called","163":"        \/\/ by the consumer. Otherwise we will check for routes with another verb.","164":"        $route = $this-\u003EmatchAgainstRoutes($routes, $request);","165":"","166":"        if (! is_null($route)) {","167":"            return $route-\u003Ebind($request);","168":"        }","169":"","170":"        \/\/ If no route was found we will now check if a matching route is specified by","171":"        \/\/ another HTTP verb. If it is we will need to throw a MethodNotAllowed and","172":"        \/\/ inform the user agent of which HTTP verb it should use for this route.","173":"        $others = $this-\u003EcheckForAlternateVerbs($request);","174":"","175":"        if (count($others) \u003E 0) {","176":"            return $this-\u003EgetRouteForMethods($request, $others);","177":"        }","178":"","179":"        throw new NotFoundHttpException;","180":"    }","181":"","182":"    \/**","183":"     * Determine if a route in the array matches the request.","184":"     *","185":"     * @param  array  $routes","186":"     * @param  \\Illuminate\\Http\\Request  $request","187":"     * @param  bool  $includingMethod","188":"     * @return \\Illuminate\\Routing\\Route|null","189":"     *\/","190":"    protected function matchAgainstRoutes(array $routes, $request, $includingMethod = true)","191":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":634,"method":"findRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request.","628":"     *","629":"     * @param  \\Illuminate\\Http\\Request  $request","630":"     * @return \\Illuminate\\Routing\\Route","631":"     *\/","632":"    protected function findRoute($request)","633":"    {","634":"        $this-\u003Ecurrent = $route = $this-\u003Eroutes-\u003Ematch($request);","635":"","636":"        $this-\u003Econtainer-\u003Einstance(Route::class, $route);","637":"","638":"        return $route;","639":"    }","640":"","641":"    \/**","642":"     * Return the response for the given route.","643":"     *","644":"     * @param  \\Illuminate\\Http\\Request  $request","645":"     * @param  \\Illuminate\\Routing\\Route  $route","646":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","647":"     *\/","648":"    protected function runRoute(Request $request, Route $route)","649":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":623,"method":"dispatchToRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request.","628":"     *","629":"     * @param  \\Illuminate\\Http\\Request  $request","630":"     * @return \\Illuminate\\Routing\\Route","631":"     *\/","632":"    protected function findRoute($request)","633":"    {","634":"        $this-\u003Ecurrent = $route = $this-\u003Eroutes-\u003Ematch($request);","635":"","636":"        $this-\u003Econtainer-\u003Einstance(Route::class, $route);","637":"","638":"        return $route;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":612,"method":"dispatch","class":"Illuminate\\Routing\\Router","code_snippet":{"597":"        $route = tap($this-\u003Eroutes-\u003EgetByName($name))-\u003Ebind($this-\u003EcurrentRequest);","598":"","599":"        return $this-\u003ErunRoute($this-\u003EcurrentRequest, $route);","600":"    }","601":"","602":"    \/**","603":"     * Dispatch the request to the application.","604":"     *","605":"     * @param  \\Illuminate\\Http\\Request  $request","606":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","607":"     *\/","608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request."},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":176,"method":"Illuminate\\Foundation\\Http\\{closure}","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**","167":"     * Get the route dispatcher callback.","168":"     *","169":"     * @return \\Closure","170":"     *\/","171":"    protected function dispatchToRouter()","172":"    {","173":"        return function ($request) {","174":"            $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","175":"","176":"            return $this-\u003Erouter-\u003Edispatch($request);","177":"        };","178":"    }","179":"","180":"    \/**","181":"     * Call the terminate method on any terminable middleware.","182":"     *","183":"     * @param  \\Illuminate\\Http\\Request  $request","184":"     * @param  \\Illuminate\\Http\\Response  $response","185":"     * @return void","186":"     *\/","187":"    public function terminate($request, $response)","188":"    {","189":"        $this-\u003EterminateMiddleware($request, $response);","190":"","191":"        $this-\u003Eapp-\u003Eterminate();"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":130,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**","121":"     * Get the final piece of the Closure onion.","122":"     *","123":"     * @param  \\Closure  $destination","124":"     * @return \\Closure","125":"     *\/","126":"    protected function prepareDestination(Closure $destination)","127":"    {","128":"        return function ($passable) use ($destination) {","129":"            try {","130":"                return $destination($passable);","131":"            } catch (Exception $e) {","132":"                return $this-\u003EhandleException($passable, $e);","133":"            } catch (Throwable $e) {","134":"                return $this-\u003EhandleException($passable, new FatalThrowableError($e));","135":"            }","136":"        };","137":"    }","138":"","139":"    \/**","140":"     * Get a Closure that represents a slice of the application onion.","141":"     *","142":"     * @return \\Closure","143":"     *\/","144":"    protected function carry()","145":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":62,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode","code_snippet":{"47":"    {","48":"        if ($this-\u003Eapp-\u003EisDownForMaintenance()) {","49":"            $data = json_decode(file_get_contents($this-\u003Eapp-\u003EstoragePath().\u0027\/framework\/down\u0027), true);","50":"","51":"            if (isset($data[\u0027allowed\u0027]) \u0026\u0026 IpUtils::checkIp($request-\u003Eip(), (array) $data[\u0027allowed\u0027])) {","52":"                return $next($request);","53":"            }","54":"","55":"            if ($this-\u003EinExceptArray($request)) {","56":"                return $next($request);","57":"            }","58":"","59":"            throw new MaintenanceModeException($data[\u0027time\u0027], $data[\u0027retry\u0027], $data[\u0027message\u0027]);","60":"        }","61":"","62":"        return $next($request);","63":"    }","64":"","65":"    \/**","66":"     * Determine if the request has a URI that should be accessible in maintenance mode.","67":"     *","68":"     * @param  \\Illuminate\\Http\\Request  $request","69":"     * @return bool","70":"     *\/","71":"    protected function inExceptArray($request)","72":"    {","73":"        foreach ($this-\u003Eexcept as $except) {","74":"            if ($except !== \u0027\/\u0027) {","75":"                $except = trim($except, \u0027\/\u0027);","76":"            }","77":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/CheckForMaintenanceMode.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":27,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize","code_snippet":{"12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *","17":"     * @throws \\Illuminate\\Http\\Exceptions\\PostTooLargeException","18":"     *\/","19":"    public function handle($request, Closure $next)","20":"    {","21":"        $max = $this-\u003EgetPostMaxSize();","22":"","23":"        if ($max \u003E 0 \u0026\u0026 $request-\u003Eserver(\u0027CONTENT_LENGTH\u0027) \u003E $max) {","24":"            throw new PostTooLargeException;","25":"        }","26":"","27":"        return $next($request);","28":"    }","29":"","30":"    \/**","31":"     * Determine the server \u0027post_max_size\u0027 as bytes.","32":"     *","33":"     * @return int","34":"     *\/","35":"    protected function getPostMaxSize()","36":"    {","37":"        if (is_numeric($postMaxSize = ini_get(\u0027post_max_size\u0027))) {","38":"            return (int) $postMaxSize;","39":"        }","40":"","41":"        $metric = strtoupper(substr($postMaxSize, -1));","42":"        $postMaxSize = (int) $postMaxSize;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/ValidatePostSize.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":57,"method":"handle","class":"Fideloper\\Proxy\\TrustProxies","code_snippet":{"42":"    \/**","43":"     * Handle an incoming request.","44":"     *","45":"     * @param \\Illuminate\\Http\\Request $request","46":"     * @param \\Closure                 $next","47":"     *","48":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\HttpException","49":"     *","50":"     * @return mixed","51":"     *\/","52":"    public function handle(Request $request, Closure $next)","53":"    {","54":"        $request::setTrustedProxies([], $this-\u003EgetTrustedHeaderNames()); \/\/ Reset trusted proxies between requests","55":"        $this-\u003EsetTrustedProxyIpAddresses($request);","56":"","57":"        return $next($request);","58":"    }","59":"","60":"    \/**","61":"     * Sets the trusted proxies on the request to the value of trustedproxy.proxies","62":"     *","63":"     * @param \\Illuminate\\Http\\Request $request","64":"     *\/","65":"    protected function setTrustedProxyIpAddresses(Request $request)","66":"    {","67":"        $trustedIps = $this-\u003Eproxies ?: $this-\u003Econfig-\u003Eget(\u0027trustedproxy.proxies\u0027);","68":"","69":"        \/\/ Trust any IP address that calls us","70":"        \/\/ `**` for backwards compatibility, but is deprecated","71":"        if ($trustedIps === \u0027*\u0027 || $trustedIps === \u0027**\u0027) {","72":"            return $this-\u003EsetTrustedProxyIpAddressesToTheCallingIp($request);"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/fideloper\/proxy\/src\/TrustProxies.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":105,"method":"then","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"90":"        return $this;","91":"    }","92":"","93":"    \/**","94":"     * Run the pipeline with a final destination callback.","95":"     *","96":"     * @param  \\Closure  $destination","97":"     * @return mixed","98":"     *\/","99":"    public function then(Closure $destination)","100":"    {","101":"        $pipeline = array_reduce(","102":"            array_reverse($this-\u003Epipes), $this-\u003Ecarry(), $this-\u003EprepareDestination($destination)","103":"        );","104":"","105":"        return $pipeline($this-\u003Epassable);","106":"    }","107":"","108":"    \/**","109":"     * Run the pipeline and return the result.","110":"     *","111":"     * @return mixed","112":"     *\/","113":"    public function thenReturn()","114":"    {","115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":151,"method":"sendRequestThroughRouter","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"136":"     *","137":"     * @param  \\Illuminate\\Http\\Request  $request","138":"     * @return \\Illuminate\\Http\\Response","139":"     *\/","140":"    protected function sendRequestThroughRouter($request)","141":"    {","142":"        $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","143":"","144":"        Facade::clearResolvedInstance(\u0027request\u0027);","145":"","146":"        $this-\u003Ebootstrap();","147":"","148":"        return (new Pipeline($this-\u003Eapp))","149":"                    -\u003Esend($request)","150":"                    -\u003Ethrough($this-\u003Eapp-\u003EshouldSkipMiddleware() ? [] : $this-\u003Emiddleware)","151":"                    -\u003Ethen($this-\u003EdispatchToRouter());","152":"    }","153":"","154":"    \/**","155":"     * Bootstrap the application for HTTP requests.","156":"     *","157":"     * @return void","158":"     *\/","159":"    public function bootstrap()","160":"    {","161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":116,"method":"handle","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"101":"            $router-\u003EaliasMiddleware($key, $middleware);","102":"        }","103":"    }","104":"","105":"    \/**","106":"     * Handle an incoming HTTP request.","107":"     *","108":"     * @param  \\Illuminate\\Http\\Request  $request","109":"     * @return \\Illuminate\\Http\\Response","110":"     *\/","111":"    public function handle($request)","112":"    {","113":"        try {","114":"            $request-\u003EenableHttpMethodParameterOverride();","115":"","116":"            $response = $this-\u003EsendRequestThroughRouter($request);","117":"        } catch (Exception $e) {","118":"            $this-\u003EreportException($e);","119":"","120":"            $response = $this-\u003ErenderException($request, $e);","121":"        } catch (Throwable $e) {","122":"            $this-\u003EreportException($e = new FatalThrowableError($e));","123":"","124":"            $response = $this-\u003ErenderException($request, $e);","125":"        }","126":"","127":"        $this-\u003Eapp[\u0027events\u0027]-\u003Edispatch(","128":"            new Events\\RequestHandled($request, $response)","129":"        );","130":"","131":"        return $response;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":55,"method":"[top]","class":null,"code_snippet":{"31":"| We need to illuminate PHP development, so let us turn on the lights.","32":"| This bootstraps the framework and gets it ready for use, then it","33":"| will load up this application so that we can run it and send","34":"| the responses back to the browser and delight our users.","35":"|","36":"*\/","37":"","38":"$app = require_once __DIR__.\u0027\/..\/bootstrap\/app.php\u0027;","39":"","40":"\/*","41":"|--------------------------------------------------------------------------","42":"| Run The Application","43":"|--------------------------------------------------------------------------","44":"|","45":"| Once we have the application, we can handle the incoming request","46":"| through the kernel, and send the associated response back to","47":"| the client\u0027s browser allowing them to enjoy the creative","48":"| and wonderful application we have prepared for them.","49":"|","50":"*\/","51":"","52":"$kernel = $app-\u003Emake(Illuminate\\Contracts\\Http\\Kernel::class);","53":"","54":"$response = $kernel-\u003Ehandle(","55":"    $request = Illuminate\\Http\\Request::capture()","56":");","57":"","58":"$response-\u003Esend();","59":"","60":"$kernel-\u003Eterminate($request, $response);","61":""},"file":"\/home\/vagrant\/ProjectLaravel\/public\/index.php"}],"context":{"request":{"url":"http:\/\/b3789e93786d.ngrok.io\/logout","ip":null,"method":"GET","useragent":"Arachni\/v2.0dev"},"request_data":{"queryString":[],"body":[],"files":[]},"headers":{"x-forwarded-for":["115.134.146.242"],"cookie":["XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"],"x-arachni-scan-seed":["e726fec99e34eb4301257a91f6c15ec4"],"accept-language":["en-US,en;q=0.8,he;q=0.6"],"accept":["text\/html,application\/xhtml+xml,application\/xml;q=0.9,*\/*;q=0.8"],"user-agent":["Arachni\/v2.0dev"],"accept-encoding":["gzip, deflate"],"host":["b3789e93786d.ngrok.io"],"content-length":[""],"content-type":[""]},"cookies":{"XSRF-TOKEN":"cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t","laravel_session":"rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"},"session":[],"route":{"route":null,"routeParameters":[],"controllerAction":null,"middleware":[]},"user":[],"env":{"laravel_version":"6.0.3","laravel_locale":"en","laravel_config_cached":false,"php_version":"7.4.11"},"logs":[],"dumps":[],"queries":[],"git":{"hash":"","message":"","tag":"","remote":"","isDirty":false}},"stage":"local","message_level":null,"application_path":"\/home\/vagrant\/ProjectLaravel"},"config":{"editor":"phpstorm","remoteSitesPath":"","localSitesPath":"","theme":"light","enableShareButton":true,"enableRunnableSolutions":true,"directorySeparator":"\/"},"solutions":[],"telescopeUrl":null,"shareEndpoint":"http:\/\/b3789e93786d.ngrok.io\/_ignition\/share-report"}
    window.tabs = [];
&lt;/script&gt;

&lt;noscript&gt;&lt;pre&gt;Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: The GET method is not supported for this route. Supported methods: POST. in file /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php on line 256

#0 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php(242): Illuminate\Routing\RouteCollection-&gt;methodNotAllowed()
#1 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php(176): Illuminate\Routing\RouteCollection-&gt;getRouteForMethods()
#2 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(634): Illuminate\Routing\RouteCollection-&gt;match()
#3 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(623): Illuminate\Routing\Router-&gt;findRoute()
#4 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(612): Illuminate\Routing\Router-&gt;dispatchToRoute()
#5 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(176): Illuminate\Routing\Router-&gt;dispatch()
#6 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(130): Illuminate\Foundation\Http\Kernel-&gt;Illuminate\Foundation\Http\{closure}()
#7 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#8 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#9 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php(62): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#10 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode-&gt;handle()
#11 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php(27): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#12 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\ValidatePostSize-&gt;handle()
#13 /home/vagrant/ProjectLaravel/vendor/fideloper/proxy/src/TrustProxies.php(57): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#14 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Fideloper\Proxy\TrustProxies-&gt;handle()
#15 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#16 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#17 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(105): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#18 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(151): Illuminate\Pipeline\Pipeline-&gt;then()
#19 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(116): Illuminate\Foundation\Http\Kernel-&gt;sendRequestThroughRouter()
#20 /home/vagrant/ProjectLaravel/public/index.php(55): Illuminate\Foundation\Http\Kernel-&gt;handle()
#21 {main}
&lt;/pre&gt;&lt;/noscript&gt;

&lt;div id="app"&gt;&lt;/div&gt;

&lt;script&gt;
    window.Ignition = window.ignite(window.data);
&lt;/script&gt;
&lt;script&gt;
    Ignition.start();
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;
</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/logout</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>GET /logout HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/logout</url>
          <code>405</code>
          <ip_address>3.14.182.203</ip_address>
          <time>0.781</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Allow" value="POST"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:39:19 GMT"/>
          </headers>
          <body>&lt;!doctype html&gt;
&lt;html class="theme-light"&gt;
&lt;head&gt;
    &lt;!-- Hide dumps asap --&gt;
    &lt;style&gt;
        pre.sf-dump {
            display: none !important;
        }
    &lt;/style&gt;

    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport"
          content="width=device-width, initial-scale=1.0"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;
    &lt;meta name="robots" content="noindex, nofollow"&gt;

    &lt;title&gt;&#x1F9E8; The GET method is not supported for this route. Supported methods: POST.&lt;/title&gt;

    
    &lt;link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css"&gt;

    &lt;script src="http://b3789e93786d.ngrok.io/_ignition/assets"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body class="scrollbar-lg"&gt;

&lt;script&gt;
    window.data = {"report":{"notifier":"Laravel Client","language":"PHP","framework_version":"6.0.3","language_version":"7.4.11","exception_class":"Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","seen_at":1604309959,"message":"The GET method is not supported for this route. Supported methods: POST.","glows":[],"solutions":[],"stacktrace":[{"line_number":256,"method":"methodNotAllowed","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"241":"","242":"        $this-\u003EmethodNotAllowed($methods, $request-\u003Emethod());","243":"    }","244":"","245":"    \/**","246":"     * Throw a method not allowed HTTP exception.","247":"     *","248":"     * @param  array  $others","249":"     * @param  string  $method","250":"     * @return void","251":"     *","252":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","253":"     *\/","254":"    protected function methodNotAllowed(array $others, $method)","255":"    {","256":"        throw new MethodNotAllowedHttpException(","257":"            $others,","258":"            sprintf(","259":"                \u0027The %s method is not supported for this route. Supported methods: %s.\u0027,","260":"                $method,","261":"                implode(\u0027, \u0027, $others)","262":"            )","263":"        );","264":"    }","265":"","266":"    \/**","267":"     * Get routes from the collection by method.","268":"     *","269":"     * @param  string|null  $method","270":"     * @return array","271":"     *\/"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":242,"method":"getRouteForMethods","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"227":"     *","228":"     * @param  \\Illuminate\\Http\\Request  $request","229":"     * @param  array  $methods","230":"     * @return \\Illuminate\\Routing\\Route","231":"     *","232":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","233":"     *\/","234":"    protected function getRouteForMethods($request, array $methods)","235":"    {","236":"        if ($request-\u003Emethod() === \u0027OPTIONS\u0027) {","237":"            return (new Route(\u0027OPTIONS\u0027, $request-\u003Epath(), function () use ($methods) {","238":"                return new Response(\u0027\u0027, 200, [\u0027Allow\u0027 =\u003E implode(\u0027,\u0027, $methods)]);","239":"            }))-\u003Ebind($request);","240":"        }","241":"","242":"        $this-\u003EmethodNotAllowed($methods, $request-\u003Emethod());","243":"    }","244":"","245":"    \/**","246":"     * Throw a method not allowed HTTP exception.","247":"     *","248":"     * @param  array  $others","249":"     * @param  string  $method","250":"     * @return void","251":"     *","252":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException","253":"     *\/","254":"    protected function methodNotAllowed(array $others, $method)","255":"    {","256":"        throw new MethodNotAllowedHttpException(","257":"            $others,"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":176,"method":"match","class":"Illuminate\\Routing\\RouteCollection","code_snippet":{"161":"        \/\/ First, we will see if we can find a matching route for this current request","162":"        \/\/ method. If we can, great, we can just return it so that it can be called","163":"        \/\/ by the consumer. Otherwise we will check for routes with another verb.","164":"        $route = $this-\u003EmatchAgainstRoutes($routes, $request);","165":"","166":"        if (! is_null($route)) {","167":"            return $route-\u003Ebind($request);","168":"        }","169":"","170":"        \/\/ If no route was found we will now check if a matching route is specified by","171":"        \/\/ another HTTP verb. If it is we will need to throw a MethodNotAllowed and","172":"        \/\/ inform the user agent of which HTTP verb it should use for this route.","173":"        $others = $this-\u003EcheckForAlternateVerbs($request);","174":"","175":"        if (count($others) \u003E 0) {","176":"            return $this-\u003EgetRouteForMethods($request, $others);","177":"        }","178":"","179":"        throw new NotFoundHttpException;","180":"    }","181":"","182":"    \/**","183":"     * Determine if a route in the array matches the request.","184":"     *","185":"     * @param  array  $routes","186":"     * @param  \\Illuminate\\Http\\Request  $request","187":"     * @param  bool  $includingMethod","188":"     * @return \\Illuminate\\Routing\\Route|null","189":"     *\/","190":"    protected function matchAgainstRoutes(array $routes, $request, $includingMethod = true)","191":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/RouteCollection.php"},{"line_number":634,"method":"findRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request.","628":"     *","629":"     * @param  \\Illuminate\\Http\\Request  $request","630":"     * @return \\Illuminate\\Routing\\Route","631":"     *\/","632":"    protected function findRoute($request)","633":"    {","634":"        $this-\u003Ecurrent = $route = $this-\u003Eroutes-\u003Ematch($request);","635":"","636":"        $this-\u003Econtainer-\u003Einstance(Route::class, $route);","637":"","638":"        return $route;","639":"    }","640":"","641":"    \/**","642":"     * Return the response for the given route.","643":"     *","644":"     * @param  \\Illuminate\\Http\\Request  $request","645":"     * @param  \\Illuminate\\Routing\\Route  $route","646":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","647":"     *\/","648":"    protected function runRoute(Request $request, Route $route)","649":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":623,"method":"dispatchToRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request.","628":"     *","629":"     * @param  \\Illuminate\\Http\\Request  $request","630":"     * @return \\Illuminate\\Routing\\Route","631":"     *\/","632":"    protected function findRoute($request)","633":"    {","634":"        $this-\u003Ecurrent = $route = $this-\u003Eroutes-\u003Ematch($request);","635":"","636":"        $this-\u003Econtainer-\u003Einstance(Route::class, $route);","637":"","638":"        return $route;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":612,"method":"dispatch","class":"Illuminate\\Routing\\Router","code_snippet":{"597":"        $route = tap($this-\u003Eroutes-\u003EgetByName($name))-\u003Ebind($this-\u003EcurrentRequest);","598":"","599":"        return $this-\u003ErunRoute($this-\u003EcurrentRequest, $route);","600":"    }","601":"","602":"    \/**","603":"     * Dispatch the request to the application.","604":"     *","605":"     * @param  \\Illuminate\\Http\\Request  $request","606":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","607":"     *\/","608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request."},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":176,"method":"Illuminate\\Foundation\\Http\\{closure}","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**","167":"     * Get the route dispatcher callback.","168":"     *","169":"     * @return \\Closure","170":"     *\/","171":"    protected function dispatchToRouter()","172":"    {","173":"        return function ($request) {","174":"            $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","175":"","176":"            return $this-\u003Erouter-\u003Edispatch($request);","177":"        };","178":"    }","179":"","180":"    \/**","181":"     * Call the terminate method on any terminable middleware.","182":"     *","183":"     * @param  \\Illuminate\\Http\\Request  $request","184":"     * @param  \\Illuminate\\Http\\Response  $response","185":"     * @return void","186":"     *\/","187":"    public function terminate($request, $response)","188":"    {","189":"        $this-\u003EterminateMiddleware($request, $response);","190":"","191":"        $this-\u003Eapp-\u003Eterminate();"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":130,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**","121":"     * Get the final piece of the Closure onion.","122":"     *","123":"     * @param  \\Closure  $destination","124":"     * @return \\Closure","125":"     *\/","126":"    protected function prepareDestination(Closure $destination)","127":"    {","128":"        return function ($passable) use ($destination) {","129":"            try {","130":"                return $destination($passable);","131":"            } catch (Exception $e) {","132":"                return $this-\u003EhandleException($passable, $e);","133":"            } catch (Throwable $e) {","134":"                return $this-\u003EhandleException($passable, new FatalThrowableError($e));","135":"            }","136":"        };","137":"    }","138":"","139":"    \/**","140":"     * Get a Closure that represents a slice of the application onion.","141":"     *","142":"     * @return \\Closure","143":"     *\/","144":"    protected function carry()","145":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":62,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode","code_snippet":{"47":"    {","48":"        if ($this-\u003Eapp-\u003EisDownForMaintenance()) {","49":"            $data = json_decode(file_get_contents($this-\u003Eapp-\u003EstoragePath().\u0027\/framework\/down\u0027), true);","50":"","51":"            if (isset($data[\u0027allowed\u0027]) \u0026\u0026 IpUtils::checkIp($request-\u003Eip(), (array) $data[\u0027allowed\u0027])) {","52":"                return $next($request);","53":"            }","54":"","55":"            if ($this-\u003EinExceptArray($request)) {","56":"                return $next($request);","57":"            }","58":"","59":"            throw new MaintenanceModeException($data[\u0027time\u0027], $data[\u0027retry\u0027], $data[\u0027message\u0027]);","60":"        }","61":"","62":"        return $next($request);","63":"    }","64":"","65":"    \/**","66":"     * Determine if the request has a URI that should be accessible in maintenance mode.","67":"     *","68":"     * @param  \\Illuminate\\Http\\Request  $request","69":"     * @return bool","70":"     *\/","71":"    protected function inExceptArray($request)","72":"    {","73":"        foreach ($this-\u003Eexcept as $except) {","74":"            if ($except !== \u0027\/\u0027) {","75":"                $except = trim($except, \u0027\/\u0027);","76":"            }","77":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/CheckForMaintenanceMode.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":27,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize","code_snippet":{"12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *","17":"     * @throws \\Illuminate\\Http\\Exceptions\\PostTooLargeException","18":"     *\/","19":"    public function handle($request, Closure $next)","20":"    {","21":"        $max = $this-\u003EgetPostMaxSize();","22":"","23":"        if ($max \u003E 0 \u0026\u0026 $request-\u003Eserver(\u0027CONTENT_LENGTH\u0027) \u003E $max) {","24":"            throw new PostTooLargeException;","25":"        }","26":"","27":"        return $next($request);","28":"    }","29":"","30":"    \/**","31":"     * Determine the server \u0027post_max_size\u0027 as bytes.","32":"     *","33":"     * @return int","34":"     *\/","35":"    protected function getPostMaxSize()","36":"    {","37":"        if (is_numeric($postMaxSize = ini_get(\u0027post_max_size\u0027))) {","38":"            return (int) $postMaxSize;","39":"        }","40":"","41":"        $metric = strtoupper(substr($postMaxSize, -1));","42":"        $postMaxSize = (int) $postMaxSize;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/ValidatePostSize.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":57,"method":"handle","class":"Fideloper\\Proxy\\TrustProxies","code_snippet":{"42":"    \/**","43":"     * Handle an incoming request.","44":"     *","45":"     * @param \\Illuminate\\Http\\Request $request","46":"     * @param \\Closure                 $next","47":"     *","48":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\HttpException","49":"     *","50":"     * @return mixed","51":"     *\/","52":"    public function handle(Request $request, Closure $next)","53":"    {","54":"        $request::setTrustedProxies([], $this-\u003EgetTrustedHeaderNames()); \/\/ Reset trusted proxies between requests","55":"        $this-\u003EsetTrustedProxyIpAddresses($request);","56":"","57":"        return $next($request);","58":"    }","59":"","60":"    \/**","61":"     * Sets the trusted proxies on the request to the value of trustedproxy.proxies","62":"     *","63":"     * @param \\Illuminate\\Http\\Request $request","64":"     *\/","65":"    protected function setTrustedProxyIpAddresses(Request $request)","66":"    {","67":"        $trustedIps = $this-\u003Eproxies ?: $this-\u003Econfig-\u003Eget(\u0027trustedproxy.proxies\u0027);","68":"","69":"        \/\/ Trust any IP address that calls us","70":"        \/\/ `**` for backwards compatibility, but is deprecated","71":"        if ($trustedIps === \u0027*\u0027 || $trustedIps === \u0027**\u0027) {","72":"            return $this-\u003EsetTrustedProxyIpAddressesToTheCallingIp($request);"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/fideloper\/proxy\/src\/TrustProxies.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":105,"method":"then","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"90":"        return $this;","91":"    }","92":"","93":"    \/**","94":"     * Run the pipeline with a final destination callback.","95":"     *","96":"     * @param  \\Closure  $destination","97":"     * @return mixed","98":"     *\/","99":"    public function then(Closure $destination)","100":"    {","101":"        $pipeline = array_reduce(","102":"            array_reverse($this-\u003Epipes), $this-\u003Ecarry(), $this-\u003EprepareDestination($destination)","103":"        );","104":"","105":"        return $pipeline($this-\u003Epassable);","106":"    }","107":"","108":"    \/**","109":"     * Run the pipeline and return the result.","110":"     *","111":"     * @return mixed","112":"     *\/","113":"    public function thenReturn()","114":"    {","115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":151,"method":"sendRequestThroughRouter","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"136":"     *","137":"     * @param  \\Illuminate\\Http\\Request  $request","138":"     * @return \\Illuminate\\Http\\Response","139":"     *\/","140":"    protected function sendRequestThroughRouter($request)","141":"    {","142":"        $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","143":"","144":"        Facade::clearResolvedInstance(\u0027request\u0027);","145":"","146":"        $this-\u003Ebootstrap();","147":"","148":"        return (new Pipeline($this-\u003Eapp))","149":"                    -\u003Esend($request)","150":"                    -\u003Ethrough($this-\u003Eapp-\u003EshouldSkipMiddleware() ? [] : $this-\u003Emiddleware)","151":"                    -\u003Ethen($this-\u003EdispatchToRouter());","152":"    }","153":"","154":"    \/**","155":"     * Bootstrap the application for HTTP requests.","156":"     *","157":"     * @return void","158":"     *\/","159":"    public function bootstrap()","160":"    {","161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":116,"method":"handle","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"101":"            $router-\u003EaliasMiddleware($key, $middleware);","102":"        }","103":"    }","104":"","105":"    \/**","106":"     * Handle an incoming HTTP request.","107":"     *","108":"     * @param  \\Illuminate\\Http\\Request  $request","109":"     * @return \\Illuminate\\Http\\Response","110":"     *\/","111":"    public function handle($request)","112":"    {","113":"        try {","114":"            $request-\u003EenableHttpMethodParameterOverride();","115":"","116":"            $response = $this-\u003EsendRequestThroughRouter($request);","117":"        } catch (Exception $e) {","118":"            $this-\u003EreportException($e);","119":"","120":"            $response = $this-\u003ErenderException($request, $e);","121":"        } catch (Throwable $e) {","122":"            $this-\u003EreportException($e = new FatalThrowableError($e));","123":"","124":"            $response = $this-\u003ErenderException($request, $e);","125":"        }","126":"","127":"        $this-\u003Eapp[\u0027events\u0027]-\u003Edispatch(","128":"            new Events\\RequestHandled($request, $response)","129":"        );","130":"","131":"        return $response;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":55,"method":"[top]","class":null,"code_snippet":{"31":"| We need to illuminate PHP development, so let us turn on the lights.","32":"| This bootstraps the framework and gets it ready for use, then it","33":"| will load up this application so that we can run it and send","34":"| the responses back to the browser and delight our users.","35":"|","36":"*\/","37":"","38":"$app = require_once __DIR__.\u0027\/..\/bootstrap\/app.php\u0027;","39":"","40":"\/*","41":"|--------------------------------------------------------------------------","42":"| Run The Application","43":"|--------------------------------------------------------------------------","44":"|","45":"| Once we have the application, we can handle the incoming request","46":"| through the kernel, and send the associated response back to","47":"| the client\u0027s browser allowing them to enjoy the creative","48":"| and wonderful application we have prepared for them.","49":"|","50":"*\/","51":"","52":"$kernel = $app-\u003Emake(Illuminate\\Contracts\\Http\\Kernel::class);","53":"","54":"$response = $kernel-\u003Ehandle(","55":"    $request = Illuminate\\Http\\Request::capture()","56":");","57":"","58":"$response-\u003Esend();","59":"","60":"$kernel-\u003Eterminate($request, $response);","61":""},"file":"\/home\/vagrant\/ProjectLaravel\/public\/index.php"}],"context":{"request":{"url":"http:\/\/b3789e93786d.ngrok.io\/logout","ip":null,"method":"GET","useragent":"Arachni\/v2.0dev"},"request_data":{"queryString":[],"body":[],"files":[]},"headers":{"x-forwarded-for":["115.134.146.242"],"cookie":["XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"],"x-arachni-scan-seed":["e726fec99e34eb4301257a91f6c15ec4"],"accept-language":["en-US,en;q=0.8,he;q=0.6"],"accept":["text\/html,application\/xhtml+xml,application\/xml;q=0.9,*\/*;q=0.8"],"user-agent":["Arachni\/v2.0dev"],"accept-encoding":["gzip, deflate"],"host":["b3789e93786d.ngrok.io"],"content-length":[""],"content-type":[""]},"cookies":{"XSRF-TOKEN":"cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t","laravel_session":"rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"},"session":[],"route":{"route":null,"routeParameters":[],"controllerAction":null,"middleware":[]},"user":[],"env":{"laravel_version":"6.0.3","laravel_locale":"en","laravel_config_cached":false,"php_version":"7.4.11"},"logs":[],"dumps":[],"queries":[],"git":{"hash":"","message":"","tag":"","remote":"","isDirty":false}},"stage":"local","message_level":null,"application_path":"\/home\/vagrant\/ProjectLaravel"},"config":{"editor":"phpstorm","remoteSitesPath":"","localSitesPath":"","theme":"light","enableShareButton":true,"enableRunnableSolutions":true,"directorySeparator":"\/"},"solutions":[],"telescopeUrl":null,"shareEndpoint":"http:\/\/b3789e93786d.ngrok.io\/_ignition\/share-report"}
    window.tabs = [];
&lt;/script&gt;

&lt;noscript&gt;&lt;pre&gt;Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: The GET method is not supported for this route. Supported methods: POST. in file /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php on line 256

#0 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php(242): Illuminate\Routing\RouteCollection-&gt;methodNotAllowed()
#1 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/RouteCollection.php(176): Illuminate\Routing\RouteCollection-&gt;getRouteForMethods()
#2 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(634): Illuminate\Routing\RouteCollection-&gt;match()
#3 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(623): Illuminate\Routing\Router-&gt;findRoute()
#4 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(612): Illuminate\Routing\Router-&gt;dispatchToRoute()
#5 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(176): Illuminate\Routing\Router-&gt;dispatch()
#6 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(130): Illuminate\Foundation\Http\Kernel-&gt;Illuminate\Foundation\Http\{closure}()
#7 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#8 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#9 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php(62): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#10 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode-&gt;handle()
#11 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php(27): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#12 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\ValidatePostSize-&gt;handle()
#13 /home/vagrant/ProjectLaravel/vendor/fideloper/proxy/src/TrustProxies.php(57): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#14 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Fideloper\Proxy\TrustProxies-&gt;handle()
#15 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#16 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#17 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(105): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#18 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(151): Illuminate\Pipeline\Pipeline-&gt;then()
#19 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(116): Illuminate\Foundation\Http\Kernel-&gt;sendRequestThroughRouter()
#20 /home/vagrant/ProjectLaravel/public/index.php(55): Illuminate\Foundation\Http\Kernel-&gt;handle()
#21 {main}
&lt;/pre&gt;&lt;/noscript&gt;

&lt;div id="app"&gt;&lt;/div&gt;

&lt;script&gt;
    window.Ignition = window.ignite(window.data);
&lt;/script&gt;
&lt;script&gt;
    Ignition.start();
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;
</body>
          <raw_headers>HTTP/1.1 405 Method Not Allowed&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
allow: POST&#xD;
Cache-Control: no-cache, private&#xD;
date: Mon, 02 Nov 2020 09:39:19 GMT&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/logout</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </page>
      <referring_page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>GET / HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/</url>
          <code>302</code>
          <ip_address>3.14.182.203</ip_address>
          <time>1.031</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:38:56 GMT"/>
            <header name="Location" value="/login"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:38:56 GMT&#xD;
Location: /login&#xD;
Set-Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </referring_page>
      <signature/>
      <proof>HTTP/1.1 405 Method Not Allowed</proof>
      <trusted>true</trusted>
      <platform_type/>
      <platform_name/>
    </issue>
    <issue>
      <name>Interesting response</name>
      <description>
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.
</description>
      <remedy_guidance/>
      <remedy_code/>
      <severity>informational</severity>
      <check>
        <name>Interesting responses</name>
        <description>Logs all non 200 (OK) server responses.</description>
        <author>Tasos "Zapotek" Laskos &lt;tasos.laskos@arachni-scanner.com&gt;</author>
        <version>0.2.1</version>
        <shortname>interesting_responses</shortname>
      </check>
      <digest>1151503195</digest>
      <references>
        <reference title="w3.org" url="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"/>
      </references>
      <vector>
        <class>Arachni::Element::Server</class>
        <type>server</type>
        <url>http://b3789e93786d.ngrok.io/admin/system-calendar</url>
        <action>http://b3789e93786d.ngrok.io/admin/system-calendar</action>
      </vector>
      <remarks/>
      <page>
        <body>&lt;!doctype html&gt;
&lt;html class="theme-light"&gt;
&lt;head&gt;
    &lt;!-- Hide dumps asap --&gt;
    &lt;style&gt;
        pre.sf-dump {
            display: none !important;
        }
    &lt;/style&gt;

    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport"
          content="width=device-width, initial-scale=1.0"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;
    &lt;meta name="robots" content="noindex, nofollow"&gt;

    &lt;title&gt;&#x1F9E8; Trying to get property 'name' of non-object&lt;/title&gt;

    
    &lt;link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css"&gt;

    &lt;script src="http://b3789e93786d.ngrok.io/_ignition/assets"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body class="scrollbar-lg"&gt;

&lt;script&gt;
    window.data = {"report":{"notifier":"Laravel Client","language":"PHP","framework_version":"6.0.3","language_version":"7.4.11","exception_class":"ErrorException","seen_at":1604309957,"message":"Trying to get property \u0027name\u0027 of non-object","glows":[],"solutions":[],"stacktrace":[{"line_number":23,"method":"handleError","class":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions","code_snippet":{"2":"","3":"namespace App\\Http\\Controllers\\Admin;","4":"","5":"use App\\Appointment;","6":"use App\\Http\\Controllers\\Controller;","7":"","8":"class SystemCalendarController extends Controller","9":"{","10":"","11":"    public function index()","12":"    {","13":"        $events = [];","14":"","15":"        $appointments = Appointment::with([\u0027client\u0027, \u0027employee\u0027])-\u003Eget();","16":"","17":"        foreach ($appointments as $appointment) {","18":"            if (!$appointment-\u003Estart_time) {","19":"                continue;","20":"            }","21":"","22":"            $events[] = [","23":"                \u0027title\u0027 =\u003E $appointment-\u003Eclient-\u003Ename . \u0027 (\u0027.$appointment-\u003Eemployee-\u003Ename.\u0027)\u0027,","24":"                \u0027start\u0027 =\u003E $appointment-\u003Estart_time,","25":"                \u0027url\u0027   =\u003E route(\u0027admin.appointments.edit\u0027, $appointment-\u003Eid),","26":"            ];","27":"        }","28":"","29":"        return view(\u0027admin.calendar.calendar\u0027, compact(\u0027events\u0027));","30":"    }","31":"}","32":""},"file":"\/home\/vagrant\/ProjectLaravel\/app\/Http\/Controllers\/Admin\/SystemCalendarController.php"},{"line_number":23,"method":"index","class":"App\\Http\\Controllers\\Admin\\SystemCalendarController","code_snippet":{"2":"","3":"namespace App\\Http\\Controllers\\Admin;","4":"","5":"use App\\Appointment;","6":"use App\\Http\\Controllers\\Controller;","7":"","8":"class SystemCalendarController extends Controller","9":"{","10":"","11":"    public function index()","12":"    {","13":"        $events = [];","14":"","15":"        $appointments = Appointment::with([\u0027client\u0027, \u0027employee\u0027])-\u003Eget();","16":"","17":"        foreach ($appointments as $appointment) {","18":"            if (!$appointment-\u003Estart_time) {","19":"                continue;","20":"            }","21":"","22":"            $events[] = [","23":"                \u0027title\u0027 =\u003E $appointment-\u003Eclient-\u003Ename . \u0027 (\u0027.$appointment-\u003Eemployee-\u003Ename.\u0027)\u0027,","24":"                \u0027start\u0027 =\u003E $appointment-\u003Estart_time,","25":"                \u0027url\u0027   =\u003E route(\u0027admin.appointments.edit\u0027, $appointment-\u003Eid),","26":"            ];","27":"        }","28":"","29":"        return view(\u0027admin.calendar.calendar\u0027, compact(\u0027events\u0027));","30":"    }","31":"}","32":""},"file":"\/home\/vagrant\/ProjectLaravel\/app\/Http\/Controllers\/Admin\/SystemCalendarController.php"},{"line_number":0,"method":"call_user_func_array","class":null,"code_snippet":[],"file":"unknown"},{"line_number":54,"method":"callAction","class":"Illuminate\\Routing\\Controller","code_snippet":{"39":"     *\/","40":"    public function getMiddleware()","41":"    {","42":"        return $this-\u003Emiddleware;","43":"    }","44":"","45":"    \/**","46":"     * Execute an action on the controller.","47":"     *","48":"     * @param  string  $method","49":"     * @param  array   $parameters","50":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","51":"     *\/","52":"    public function callAction($method, $parameters)","53":"    {","54":"        return call_user_func_array([$this, $method], $parameters);","55":"    }","56":"","57":"    \/**","58":"     * Handle calls to missing methods on the controller.","59":"     *","60":"     * @param  string  $method","61":"     * @param  array   $parameters","62":"     * @return mixed","63":"     *","64":"     * @throws \\BadMethodCallException","65":"     *\/","66":"    public function __call($method, $parameters)","67":"    {","68":"        throw new BadMethodCallException(sprintf(","69":"            \u0027Method %s::%s does not exist.\u0027, static::class, $method"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Controller.php"},{"line_number":45,"method":"dispatch","class":"Illuminate\\Routing\\ControllerDispatcher","code_snippet":{"30":"    \/**","31":"     * Dispatch a request to a given controller and method.","32":"     *","33":"     * @param  \\Illuminate\\Routing\\Route  $route","34":"     * @param  mixed  $controller","35":"     * @param  string  $method","36":"     * @return mixed","37":"     *\/","38":"    public function dispatch(Route $route, $controller, $method)","39":"    {","40":"        $parameters = $this-\u003EresolveClassMethodDependencies(","41":"            $route-\u003EparametersWithoutNulls(), $controller, $method","42":"        );","43":"","44":"        if (method_exists($controller, \u0027callAction\u0027)) {","45":"            return $controller-\u003EcallAction($method, $parameters);","46":"        }","47":"","48":"        return $controller-\u003E{$method}(...array_values($parameters));","49":"    }","50":"","51":"    \/**","52":"     * Get the middleware for the controller instance.","53":"     *","54":"     * @param  \\Illuminate\\Routing\\Controller  $controller","55":"     * @param  string  $method","56":"     * @return array","57":"     *\/","58":"    public function getMiddleware($controller, $method)","59":"    {","60":"        if (! method_exists($controller, \u0027getMiddleware\u0027)) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/ControllerDispatcher.php"},{"line_number":219,"method":"runController","class":"Illuminate\\Routing\\Route","code_snippet":{"204":"        return $callable(...array_values($this-\u003EresolveMethodDependencies(","205":"            $this-\u003EparametersWithoutNulls(), new ReflectionFunction($this-\u003Eaction[\u0027uses\u0027])","206":"        )));","207":"    }","208":"","209":"    \/**","210":"     * Run the route action and return the response.","211":"     *","212":"     * @return mixed","213":"     *","214":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException","215":"     *\/","216":"    protected function runController()","217":"    {","218":"        return $this-\u003EcontrollerDispatcher()-\u003Edispatch(","219":"            $this, $this-\u003EgetController(), $this-\u003EgetControllerMethod()","220":"        );","221":"    }","222":"","223":"    \/**","224":"     * Get the controller instance for the route.","225":"     *","226":"     * @return mixed","227":"     *\/","228":"    public function getController()","229":"    {","230":"        if (! $this-\u003Econtroller) {","231":"            $class = $this-\u003EparseControllerCallback()[0];","232":"","233":"            $this-\u003Econtroller = $this-\u003Econtainer-\u003Emake(ltrim($class, \u0027\\\\\u0027));","234":"        }"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Route.php"},{"line_number":176,"method":"run","class":"Illuminate\\Routing\\Route","code_snippet":{"161":"    {","162":"        return RouteAction::parse($this-\u003Euri, $action);","163":"    }","164":"","165":"    \/**","166":"     * Run the route action and return the response.","167":"     *","168":"     * @return mixed","169":"     *\/","170":"    public function run()","171":"    {","172":"        $this-\u003Econtainer = $this-\u003Econtainer ?: new Container;","173":"","174":"        try {","175":"            if ($this-\u003EisControllerAction()) {","176":"                return $this-\u003ErunController();","177":"            }","178":"","179":"            return $this-\u003ErunCallable();","180":"        } catch (HttpResponseException $e) {","181":"            return $e-\u003EgetResponse();","182":"        }","183":"    }","184":"","185":"    \/**","186":"     * Checks whether the route\u0027s action is a controller.","187":"     *","188":"     * @return bool","189":"     *\/","190":"    protected function isControllerAction()","191":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Route.php"},{"line_number":680,"method":"Illuminate\\Routing\\{closure}","class":"Illuminate\\Routing\\Router","code_snippet":{"665":"     * @param  \\Illuminate\\Http\\Request  $request","666":"     * @return mixed","667":"     *\/","668":"    protected function runRouteWithinStack(Route $route, Request $request)","669":"    {","670":"        $shouldSkipMiddleware = $this-\u003Econtainer-\u003Ebound(\u0027middleware.disable\u0027) \u0026\u0026","671":"                                $this-\u003Econtainer-\u003Emake(\u0027middleware.disable\u0027) === true;","672":"","673":"        $middleware = $shouldSkipMiddleware ? [] : $this-\u003EgatherRouteMiddleware($route);","674":"","675":"        return (new Pipeline($this-\u003Econtainer))","676":"                        -\u003Esend($request)","677":"                        -\u003Ethrough($middleware)","678":"                        -\u003Ethen(function ($request) use ($route) {","679":"                            return $this-\u003EprepareResponse(","680":"                                $request, $route-\u003Erun()","681":"                            );","682":"                        });","683":"    }","684":"","685":"    \/**","686":"     * Gather the middleware for the given route with resolved class names.","687":"     *","688":"     * @param  \\Illuminate\\Routing\\Route  $route","689":"     * @return array","690":"     *\/","691":"    public function gatherRouteMiddleware(Route $route)","692":"    {","693":"        $middleware = collect($route-\u003EgatherMiddleware())-\u003Emap(function ($name) {","694":"            return (array) MiddlewareNameResolver::resolve($name, $this-\u003Emiddleware, $this-\u003EmiddlewareGroups);","695":"        })-\u003Eflatten();"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":130,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**","121":"     * Get the final piece of the Closure onion.","122":"     *","123":"     * @param  \\Closure  $destination","124":"     * @return \\Closure","125":"     *\/","126":"    protected function prepareDestination(Closure $destination)","127":"    {","128":"        return function ($passable) use ($destination) {","129":"            try {","130":"                return $destination($passable);","131":"            } catch (Exception $e) {","132":"                return $this-\u003EhandleException($passable, $e);","133":"            } catch (Throwable $e) {","134":"                return $this-\u003EhandleException($passable, new FatalThrowableError($e));","135":"            }","136":"        };","137":"    }","138":"","139":"    \/**","140":"     * Get a Closure that represents a slice of the application onion.","141":"     *","142":"     * @return \\Closure","143":"     *\/","144":"    protected function carry()","145":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":24,"method":"handle","class":"App\\Http\\Middleware\\SetLocale","code_snippet":{"1":"\u003C?php","2":"","3":"namespace App\\Http\\Middleware;","4":"","5":"use Closure;","6":"","7":"class SetLocale","8":"{","9":"    public function handle($request, Closure $next)","10":"    {","11":"        if (request(\u0027change_language\u0027)) {","12":"            session()-\u003Eput(\u0027language\u0027, request(\u0027change_language\u0027));","13":"            $language = request(\u0027change_language\u0027);","14":"        } elseif (session(\u0027language\u0027)) {","15":"            $language = session(\u0027language\u0027);","16":"        } elseif (config(\u0027panel.primary_language\u0027)) {","17":"            $language = config(\u0027panel.primary_language\u0027);","18":"        }","19":"","20":"        if (isset($language)) {","21":"            app()-\u003EsetLocale($language);","22":"        }","23":"","24":"        return $next($request);","25":"    }","26":"}","27":""},"file":"\/home\/vagrant\/ProjectLaravel\/app\/Http\/Middleware\/SetLocale.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":32,"method":"handle","class":"App\\Http\\Middleware\\AuthGates","code_snippet":{"5":"use App\\Role;","6":"use Closure;","7":"use Illuminate\\Support\\Facades\\Gate;","8":"","9":"class AuthGates","10":"{","11":"    public function handle($request, Closure $next)","12":"    {","13":"        $user = \\Auth::user();","14":"","15":"        if (!app()-\u003ErunningInConsole() \u0026\u0026 $user) {","16":"            $roles            = Role::with(\u0027permissions\u0027)-\u003Eget();","17":"            $permissionsArray = [];","18":"","19":"            foreach ($roles as $role) {","20":"                foreach ($role-\u003Epermissions as $permissions) {","21":"                    $permissionsArray[$permissions-\u003Etitle][] = $role-\u003Eid;","22":"                }","23":"            }","24":"","25":"            foreach ($permissionsArray as $title =\u003E $roles) {","26":"                Gate::define($title, function (\\App\\User $user) use ($roles) {","27":"                    return count(array_intersect($user-\u003Eroles-\u003Epluck(\u0027id\u0027)-\u003EtoArray(), $roles)) \u003E 0;","28":"                });","29":"            }","30":"        }","31":"","32":"        return $next($request);","33":"    }","34":"}","35":""},"file":"\/home\/vagrant\/ProjectLaravel\/app\/Http\/Middleware\/AuthGates.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":41,"method":"handle","class":"Illuminate\\Routing\\Middleware\\SubstituteBindings","code_snippet":{"14":"     *\/","15":"    protected $router;","16":"","17":"    \/**","18":"     * Create a new bindings substitutor.","19":"     *","20":"     * @param  \\Illuminate\\Contracts\\Routing\\Registrar  $router","21":"     * @return void","22":"     *\/","23":"    public function __construct(Registrar $router)","24":"    {","25":"        $this-\u003Erouter = $router;","26":"    }","27":"","28":"    \/**","29":"     * Handle an incoming request.","30":"     *","31":"     * @param  \\Illuminate\\Http\\Request  $request","32":"     * @param  \\Closure  $next","33":"     * @return mixed","34":"     *\/","35":"    public function handle($request, Closure $next)","36":"    {","37":"        $this-\u003Erouter-\u003EsubstituteBindings($route = $request-\u003Eroute());","38":"","39":"        $this-\u003Erouter-\u003EsubstituteImplicitBindings($route);","40":"","41":"        return $next($request);","42":"    }","43":"}","44":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Middleware\/SubstituteBindings.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":43,"method":"handle","class":"Illuminate\\Auth\\Middleware\\Authenticate","code_snippet":{"28":"","29":"    \/**","30":"     * Handle an incoming request.","31":"     *","32":"     * @param  \\Illuminate\\Http\\Request  $request","33":"     * @param  \\Closure  $next","34":"     * @param  string[]  ...$guards","35":"     * @return mixed","36":"     *","37":"     * @throws \\Illuminate\\Auth\\AuthenticationException","38":"     *\/","39":"    public function handle($request, Closure $next, ...$guards)","40":"    {","41":"        $this-\u003Eauthenticate($request, $guards);","42":"","43":"        return $next($request);","44":"    }","45":"","46":"    \/**","47":"     * Determine if the user is logged in to any of the given guards.","48":"     *","49":"     * @param  \\Illuminate\\Http\\Request  $request","50":"     * @param  array  $guards","51":"     * @return void","52":"     *","53":"     * @throws \\Illuminate\\Auth\\AuthenticationException","54":"     *\/","55":"    protected function authenticate($request, array $guards)","56":"    {","57":"        if (empty($guards)) {","58":"            $guards = [null];"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Auth\/Middleware\/Authenticate.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":75,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken","code_snippet":{"60":"     *","61":"     * @param  \\Illuminate\\Http\\Request  $request","62":"     * @param  \\Closure  $next","63":"     * @return mixed","64":"     *","65":"     * @throws \\Illuminate\\Session\\TokenMismatchException","66":"     *\/","67":"    public function handle($request, Closure $next)","68":"    {","69":"        if (","70":"            $this-\u003EisReading($request) ||","71":"            $this-\u003ErunningUnitTests() ||","72":"            $this-\u003EinExceptArray($request) ||","73":"            $this-\u003EtokensMatch($request)","74":"        ) {","75":"            return tap($next($request), function ($response) use ($request) {","76":"                if ($this-\u003EshouldAddXsrfTokenCookie()) {","77":"                    $this-\u003EaddCookieToResponse($request, $response);","78":"                }","79":"            });","80":"        }","81":"","82":"        throw new TokenMismatchException(\u0027CSRF token mismatch.\u0027);","83":"    }","84":"","85":"    \/**","86":"     * Determine if the HTTP request uses a \u2018read\u2019 verb.","87":"     *","88":"     * @param  \\Illuminate\\Http\\Request  $request","89":"     * @return bool","90":"     *\/"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/VerifyCsrfToken.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":49,"method":"handle","class":"Illuminate\\View\\Middleware\\ShareErrorsFromSession","code_snippet":{"22":"     * @return void","23":"     *\/","24":"    public function __construct(ViewFactory $view)","25":"    {","26":"        $this-\u003Eview = $view;","27":"    }","28":"","29":"    \/**","30":"     * Handle an incoming request.","31":"     *","32":"     * @param  \\Illuminate\\Http\\Request  $request","33":"     * @param  \\Closure  $next","34":"     * @return mixed","35":"     *\/","36":"    public function handle($request, Closure $next)","37":"    {","38":"        \/\/ If the current session has an \u0022errors\u0022 variable bound to it, we will share","39":"        \/\/ its value with all view instances so the views can easily access errors","40":"        \/\/ without having to bind. An empty bag is set when there aren\u0027t errors.","41":"        $this-\u003Eview-\u003Eshare(","42":"            \u0027errors\u0027, $request-\u003Esession()-\u003Eget(\u0027errors\u0027) ?: new ViewErrorBag","43":"        );","44":"","45":"        \/\/ Putting the errors in the view for every view allows the developer to just","46":"        \/\/ assume that some errors are always available, which is convenient since","47":"        \/\/ they don\u0027t have to continually run checks for the presence of errors.","48":"","49":"        return $next($request);","50":"    }","51":"}","52":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/View\/Middleware\/ShareErrorsFromSession.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":56,"method":"handle","class":"Illuminate\\Session\\Middleware\\StartSession","code_snippet":{"41":"    public function handle($request, Closure $next)","42":"    {","43":"        if (! $this-\u003EsessionConfigured()) {","44":"            return $next($request);","45":"        }","46":"","47":"        \/\/ If a session driver has been configured, we will need to start the session here","48":"        \/\/ so that the data is ready for an application. Note that the Laravel sessions","49":"        \/\/ do not make use of PHP \u0022native\u0022 sessions in any way since they are crappy.","50":"        $request-\u003EsetLaravelSession(","51":"            $session = $this-\u003EstartSession($request)","52":"        );","53":"","54":"        $this-\u003EcollectGarbage($session);","55":"","56":"        $response = $next($request);","57":"","58":"        $this-\u003EstoreCurrentUrl($request, $session);","59":"","60":"        $this-\u003EaddCookieToResponse($response, $session);","61":"","62":"        \/\/ Again, if the session has been configured we will need to close out the session","63":"        \/\/ so that the attributes may be persisted to some storage medium. We will also","64":"        \/\/ add the session identifier cookie to the application response headers now.","65":"        $this-\u003EsaveSession($request);","66":"","67":"        return $response;","68":"    }","69":"","70":"    \/**","71":"     * Start the session for the given request."},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Session\/Middleware\/StartSession.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":37,"method":"handle","class":"Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse","code_snippet":{"16":"","17":"    \/**","18":"     * Create a new CookieQueue instance.","19":"     *","20":"     * @param  \\Illuminate\\Contracts\\Cookie\\QueueingFactory  $cookies","21":"     * @return void","22":"     *\/","23":"    public function __construct(CookieJar $cookies)","24":"    {","25":"        $this-\u003Ecookies = $cookies;","26":"    }","27":"","28":"    \/**","29":"     * Handle an incoming request.","30":"     *","31":"     * @param  \\Illuminate\\Http\\Request  $request","32":"     * @param  \\Closure  $next","33":"     * @return mixed","34":"     *\/","35":"    public function handle($request, Closure $next)","36":"    {","37":"        $response = $next($request);","38":"","39":"        foreach ($this-\u003Ecookies-\u003EgetQueuedCookies() as $cookie) {","40":"            $response-\u003Eheaders-\u003EsetCookie($cookie);","41":"        }","42":"","43":"        return $response;","44":"    }","45":"}","46":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Cookie\/Middleware\/AddQueuedCookiesToResponse.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":105,"method":"then","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"90":"        return $this;","91":"    }","92":"","93":"    \/**","94":"     * Run the pipeline with a final destination callback.","95":"     *","96":"     * @param  \\Closure  $destination","97":"     * @return mixed","98":"     *\/","99":"    public function then(Closure $destination)","100":"    {","101":"        $pipeline = array_reduce(","102":"            array_reverse($this-\u003Epipes), $this-\u003Ecarry(), $this-\u003EprepareDestination($destination)","103":"        );","104":"","105":"        return $pipeline($this-\u003Epassable);","106":"    }","107":"","108":"    \/**","109":"     * Run the pipeline and return the result.","110":"     *","111":"     * @return mixed","112":"     *\/","113":"    public function thenReturn()","114":"    {","115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":682,"method":"runRouteWithinStack","class":"Illuminate\\Routing\\Router","code_snippet":{"667":"     *\/","668":"    protected function runRouteWithinStack(Route $route, Request $request)","669":"    {","670":"        $shouldSkipMiddleware = $this-\u003Econtainer-\u003Ebound(\u0027middleware.disable\u0027) \u0026\u0026","671":"                                $this-\u003Econtainer-\u003Emake(\u0027middleware.disable\u0027) === true;","672":"","673":"        $middleware = $shouldSkipMiddleware ? [] : $this-\u003EgatherRouteMiddleware($route);","674":"","675":"        return (new Pipeline($this-\u003Econtainer))","676":"                        -\u003Esend($request)","677":"                        -\u003Ethrough($middleware)","678":"                        -\u003Ethen(function ($request) use ($route) {","679":"                            return $this-\u003EprepareResponse(","680":"                                $request, $route-\u003Erun()","681":"                            );","682":"                        });","683":"    }","684":"","685":"    \/**","686":"     * Gather the middleware for the given route with resolved class names.","687":"     *","688":"     * @param  \\Illuminate\\Routing\\Route  $route","689":"     * @return array","690":"     *\/","691":"    public function gatherRouteMiddleware(Route $route)","692":"    {","693":"        $middleware = collect($route-\u003EgatherMiddleware())-\u003Emap(function ($name) {","694":"            return (array) MiddlewareNameResolver::resolve($name, $this-\u003Emiddleware, $this-\u003EmiddlewareGroups);","695":"        })-\u003Eflatten();","696":"","697":"        return $this-\u003EsortMiddleware($middleware);"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":657,"method":"runRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"642":"     * Return the response for the given route.","643":"     *","644":"     * @param  \\Illuminate\\Http\\Request  $request","645":"     * @param  \\Illuminate\\Routing\\Route  $route","646":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","647":"     *\/","648":"    protected function runRoute(Request $request, Route $route)","649":"    {","650":"        $request-\u003EsetRouteResolver(function () use ($route) {","651":"            return $route;","652":"        });","653":"","654":"        $this-\u003Eevents-\u003Edispatch(new Events\\RouteMatched($route, $request));","655":"","656":"        return $this-\u003EprepareResponse($request,","657":"            $this-\u003ErunRouteWithinStack($route, $request)","658":"        );","659":"    }","660":"","661":"    \/**","662":"     * Run the given route within a Stack \u0022onion\u0022 instance.","663":"     *","664":"     * @param  \\Illuminate\\Routing\\Route  $route","665":"     * @param  \\Illuminate\\Http\\Request  $request","666":"     * @return mixed","667":"     *\/","668":"    protected function runRouteWithinStack(Route $route, Request $request)","669":"    {","670":"        $shouldSkipMiddleware = $this-\u003Econtainer-\u003Ebound(\u0027middleware.disable\u0027) \u0026\u0026","671":"                                $this-\u003Econtainer-\u003Emake(\u0027middleware.disable\u0027) === true;","672":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":623,"method":"dispatchToRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request.","628":"     *","629":"     * @param  \\Illuminate\\Http\\Request  $request","630":"     * @return \\Illuminate\\Routing\\Route","631":"     *\/","632":"    protected function findRoute($request)","633":"    {","634":"        $this-\u003Ecurrent = $route = $this-\u003Eroutes-\u003Ematch($request);","635":"","636":"        $this-\u003Econtainer-\u003Einstance(Route::class, $route);","637":"","638":"        return $route;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":612,"method":"dispatch","class":"Illuminate\\Routing\\Router","code_snippet":{"597":"        $route = tap($this-\u003Eroutes-\u003EgetByName($name))-\u003Ebind($this-\u003EcurrentRequest);","598":"","599":"        return $this-\u003ErunRoute($this-\u003EcurrentRequest, $route);","600":"    }","601":"","602":"    \/**","603":"     * Dispatch the request to the application.","604":"     *","605":"     * @param  \\Illuminate\\Http\\Request  $request","606":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","607":"     *\/","608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request."},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":176,"method":"Illuminate\\Foundation\\Http\\{closure}","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**","167":"     * Get the route dispatcher callback.","168":"     *","169":"     * @return \\Closure","170":"     *\/","171":"    protected function dispatchToRouter()","172":"    {","173":"        return function ($request) {","174":"            $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","175":"","176":"            return $this-\u003Erouter-\u003Edispatch($request);","177":"        };","178":"    }","179":"","180":"    \/**","181":"     * Call the terminate method on any terminable middleware.","182":"     *","183":"     * @param  \\Illuminate\\Http\\Request  $request","184":"     * @param  \\Illuminate\\Http\\Response  $response","185":"     * @return void","186":"     *\/","187":"    public function terminate($request, $response)","188":"    {","189":"        $this-\u003EterminateMiddleware($request, $response);","190":"","191":"        $this-\u003Eapp-\u003Eterminate();"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":130,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**","121":"     * Get the final piece of the Closure onion.","122":"     *","123":"     * @param  \\Closure  $destination","124":"     * @return \\Closure","125":"     *\/","126":"    protected function prepareDestination(Closure $destination)","127":"    {","128":"        return function ($passable) use ($destination) {","129":"            try {","130":"                return $destination($passable);","131":"            } catch (Exception $e) {","132":"                return $this-\u003EhandleException($passable, $e);","133":"            } catch (Throwable $e) {","134":"                return $this-\u003EhandleException($passable, new FatalThrowableError($e));","135":"            }","136":"        };","137":"    }","138":"","139":"    \/**","140":"     * Get a Closure that represents a slice of the application onion.","141":"     *","142":"     * @return \\Closure","143":"     *\/","144":"    protected function carry()","145":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":62,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode","code_snippet":{"47":"    {","48":"        if ($this-\u003Eapp-\u003EisDownForMaintenance()) {","49":"            $data = json_decode(file_get_contents($this-\u003Eapp-\u003EstoragePath().\u0027\/framework\/down\u0027), true);","50":"","51":"            if (isset($data[\u0027allowed\u0027]) \u0026\u0026 IpUtils::checkIp($request-\u003Eip(), (array) $data[\u0027allowed\u0027])) {","52":"                return $next($request);","53":"            }","54":"","55":"            if ($this-\u003EinExceptArray($request)) {","56":"                return $next($request);","57":"            }","58":"","59":"            throw new MaintenanceModeException($data[\u0027time\u0027], $data[\u0027retry\u0027], $data[\u0027message\u0027]);","60":"        }","61":"","62":"        return $next($request);","63":"    }","64":"","65":"    \/**","66":"     * Determine if the request has a URI that should be accessible in maintenance mode.","67":"     *","68":"     * @param  \\Illuminate\\Http\\Request  $request","69":"     * @return bool","70":"     *\/","71":"    protected function inExceptArray($request)","72":"    {","73":"        foreach ($this-\u003Eexcept as $except) {","74":"            if ($except !== \u0027\/\u0027) {","75":"                $except = trim($except, \u0027\/\u0027);","76":"            }","77":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/CheckForMaintenanceMode.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":27,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize","code_snippet":{"12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *","17":"     * @throws \\Illuminate\\Http\\Exceptions\\PostTooLargeException","18":"     *\/","19":"    public function handle($request, Closure $next)","20":"    {","21":"        $max = $this-\u003EgetPostMaxSize();","22":"","23":"        if ($max \u003E 0 \u0026\u0026 $request-\u003Eserver(\u0027CONTENT_LENGTH\u0027) \u003E $max) {","24":"            throw new PostTooLargeException;","25":"        }","26":"","27":"        return $next($request);","28":"    }","29":"","30":"    \/**","31":"     * Determine the server \u0027post_max_size\u0027 as bytes.","32":"     *","33":"     * @return int","34":"     *\/","35":"    protected function getPostMaxSize()","36":"    {","37":"        if (is_numeric($postMaxSize = ini_get(\u0027post_max_size\u0027))) {","38":"            return (int) $postMaxSize;","39":"        }","40":"","41":"        $metric = strtoupper(substr($postMaxSize, -1));","42":"        $postMaxSize = (int) $postMaxSize;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/ValidatePostSize.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":57,"method":"handle","class":"Fideloper\\Proxy\\TrustProxies","code_snippet":{"42":"    \/**","43":"     * Handle an incoming request.","44":"     *","45":"     * @param \\Illuminate\\Http\\Request $request","46":"     * @param \\Closure                 $next","47":"     *","48":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\HttpException","49":"     *","50":"     * @return mixed","51":"     *\/","52":"    public function handle(Request $request, Closure $next)","53":"    {","54":"        $request::setTrustedProxies([], $this-\u003EgetTrustedHeaderNames()); \/\/ Reset trusted proxies between requests","55":"        $this-\u003EsetTrustedProxyIpAddresses($request);","56":"","57":"        return $next($request);","58":"    }","59":"","60":"    \/**","61":"     * Sets the trusted proxies on the request to the value of trustedproxy.proxies","62":"     *","63":"     * @param \\Illuminate\\Http\\Request $request","64":"     *\/","65":"    protected function setTrustedProxyIpAddresses(Request $request)","66":"    {","67":"        $trustedIps = $this-\u003Eproxies ?: $this-\u003Econfig-\u003Eget(\u0027trustedproxy.proxies\u0027);","68":"","69":"        \/\/ Trust any IP address that calls us","70":"        \/\/ `**` for backwards compatibility, but is deprecated","71":"        if ($trustedIps === \u0027*\u0027 || $trustedIps === \u0027**\u0027) {","72":"            return $this-\u003EsetTrustedProxyIpAddressesToTheCallingIp($request);"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/fideloper\/proxy\/src\/TrustProxies.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":105,"method":"then","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"90":"        return $this;","91":"    }","92":"","93":"    \/**","94":"     * Run the pipeline with a final destination callback.","95":"     *","96":"     * @param  \\Closure  $destination","97":"     * @return mixed","98":"     *\/","99":"    public function then(Closure $destination)","100":"    {","101":"        $pipeline = array_reduce(","102":"            array_reverse($this-\u003Epipes), $this-\u003Ecarry(), $this-\u003EprepareDestination($destination)","103":"        );","104":"","105":"        return $pipeline($this-\u003Epassable);","106":"    }","107":"","108":"    \/**","109":"     * Run the pipeline and return the result.","110":"     *","111":"     * @return mixed","112":"     *\/","113":"    public function thenReturn()","114":"    {","115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":151,"method":"sendRequestThroughRouter","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"136":"     *","137":"     * @param  \\Illuminate\\Http\\Request  $request","138":"     * @return \\Illuminate\\Http\\Response","139":"     *\/","140":"    protected function sendRequestThroughRouter($request)","141":"    {","142":"        $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","143":"","144":"        Facade::clearResolvedInstance(\u0027request\u0027);","145":"","146":"        $this-\u003Ebootstrap();","147":"","148":"        return (new Pipeline($this-\u003Eapp))","149":"                    -\u003Esend($request)","150":"                    -\u003Ethrough($this-\u003Eapp-\u003EshouldSkipMiddleware() ? [] : $this-\u003Emiddleware)","151":"                    -\u003Ethen($this-\u003EdispatchToRouter());","152":"    }","153":"","154":"    \/**","155":"     * Bootstrap the application for HTTP requests.","156":"     *","157":"     * @return void","158":"     *\/","159":"    public function bootstrap()","160":"    {","161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":116,"method":"handle","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"101":"            $router-\u003EaliasMiddleware($key, $middleware);","102":"        }","103":"    }","104":"","105":"    \/**","106":"     * Handle an incoming HTTP request.","107":"     *","108":"     * @param  \\Illuminate\\Http\\Request  $request","109":"     * @return \\Illuminate\\Http\\Response","110":"     *\/","111":"    public function handle($request)","112":"    {","113":"        try {","114":"            $request-\u003EenableHttpMethodParameterOverride();","115":"","116":"            $response = $this-\u003EsendRequestThroughRouter($request);","117":"        } catch (Exception $e) {","118":"            $this-\u003EreportException($e);","119":"","120":"            $response = $this-\u003ErenderException($request, $e);","121":"        } catch (Throwable $e) {","122":"            $this-\u003EreportException($e = new FatalThrowableError($e));","123":"","124":"            $response = $this-\u003ErenderException($request, $e);","125":"        }","126":"","127":"        $this-\u003Eapp[\u0027events\u0027]-\u003Edispatch(","128":"            new Events\\RequestHandled($request, $response)","129":"        );","130":"","131":"        return $response;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":55,"method":"[top]","class":null,"code_snippet":{"31":"| We need to illuminate PHP development, so let us turn on the lights.","32":"| This bootstraps the framework and gets it ready for use, then it","33":"| will load up this application so that we can run it and send","34":"| the responses back to the browser and delight our users.","35":"|","36":"*\/","37":"","38":"$app = require_once __DIR__.\u0027\/..\/bootstrap\/app.php\u0027;","39":"","40":"\/*","41":"|--------------------------------------------------------------------------","42":"| Run The Application","43":"|--------------------------------------------------------------------------","44":"|","45":"| Once we have the application, we can handle the incoming request","46":"| through the kernel, and send the associated response back to","47":"| the client\u0027s browser allowing them to enjoy the creative","48":"| and wonderful application we have prepared for them.","49":"|","50":"*\/","51":"","52":"$kernel = $app-\u003Emake(Illuminate\\Contracts\\Http\\Kernel::class);","53":"","54":"$response = $kernel-\u003Ehandle(","55":"    $request = Illuminate\\Http\\Request::capture()","56":");","57":"","58":"$response-\u003Esend();","59":"","60":"$kernel-\u003Eterminate($request, $response);","61":""},"file":"\/home\/vagrant\/ProjectLaravel\/public\/index.php"}],"context":{"request":{"url":"http:\/\/b3789e93786d.ngrok.io\/admin\/system-calendar","ip":null,"method":"GET","useragent":"Arachni\/v2.0dev"},"request_data":{"queryString":[],"body":[],"files":[]},"headers":{"x-forwarded-for":["115.134.146.242"],"host":["b3789e93786d.ngrok.io"],"accept-language":["en-US,*"],"cookie":["XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"],"referer":["http:\/\/b3789e93786d.ngrok.io\/admin"],"accept":["text\/html,application\/xhtml+xml,application\/xml;q=0.9,*\/*;q=0.8"],"user-agent":["Arachni\/v2.0dev"],"accept-encoding":["gzip, deflate"],"content-length":[""],"content-type":[""]},"cookies":{"XSRF-TOKEN":"cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t","laravel_session":"rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"},"session":{"_token":"cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t","_previous":{"url":"http:\/\/b3789e93786d.ngrok.io\/admin"},"_flash":{"old":[],"new":[]},"login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d":1},"route":{"route":"admin.systemCalendar","routeParameters":[],"controllerAction":"App\\Http\\Controllers\\Admin\\SystemCalendarController@index","middleware":["web","auth"]},"user":{"id":1,"name":"Admin","email":"admin@admin.com","email_verified_at":null,"created_at":"2019-09-19 12:08:28","updated_at":"2019-09-19 12:08:28","deleted_at":null},"env":{"laravel_version":"6.0.3","laravel_locale":"en","laravel_config_cached":false,"php_version":"7.4.11"},"logs":[],"dumps":[],"queries":[{"sql":"select * from `users` where `id` = ? and `users`.`deleted_at` is null limit 1","time":3.17,"connection_name":"mysql","bindings":[1],"microtime":1604309957.244582},{"sql":"select * from `roles` where `roles`.`deleted_at` is null","time":0.41,"connection_name":"mysql","bindings":[],"microtime":1604309957.247796},{"sql":"select `permissions`.*, `permission_role`.`role_id` as `pivot_role_id`, `permission_role`.`permission_id` as `pivot_permission_id` from `permissions` inner join `permission_role` on `permissions`.`id` = `permission_role`.`permission_id` where `permission_role`.`role_id` in (2) and `permissions`.`deleted_at` is null","time":0.86,"connection_name":"mysql","bindings":[],"microtime":1604309957.251325},{"sql":"select * from `appointments` where `appointments`.`deleted_at` is null","time":0.42,"connection_name":"mysql","bindings":[],"microtime":1604309957.260694},{"sql":"select * from `clients` where `clients`.`id` in (1, 2, 3, 6, 8, 10) and `clients`.`deleted_at` is null","time":0.38,"connection_name":"mysql","bindings":[],"microtime":1604309957.263727},{"sql":"select * from `employees` where `employees`.`id` in (1, 2, 3, 4, 5) and `employees`.`deleted_at` is null","time":0.28,"connection_name":"mysql","bindings":[],"microtime":1604309957.267308}],"git":{"hash":"","message":"","tag":"","remote":"","isDirty":false}},"stage":"local","message_level":null,"application_path":"\/home\/vagrant\/ProjectLaravel"},"config":{"editor":"phpstorm","remoteSitesPath":"","localSitesPath":"","theme":"light","enableShareButton":true,"enableRunnableSolutions":true,"directorySeparator":"\/"},"solutions":[],"telescopeUrl":null,"shareEndpoint":"http:\/\/b3789e93786d.ngrok.io\/_ignition\/share-report"}
    window.tabs = [];
&lt;/script&gt;

&lt;noscript&gt;&lt;pre&gt;ErrorException: Trying to get property 'name' of non-object in file /home/vagrant/ProjectLaravel/app/Http/Controllers/Admin/SystemCalendarController.php on line 23

#0 /home/vagrant/ProjectLaravel/app/Http/Controllers/Admin/SystemCalendarController.php(23): Illuminate\Foundation\Bootstrap\HandleExceptions-&gt;handleError()
#1 [internal function]: App\Http\Controllers\Admin\SystemCalendarController-&gt;index()
#2 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Controller.php(54): call_user_func_array()
#3 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php(45): Illuminate\Routing\Controller-&gt;callAction()
#4 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Route.php(219): Illuminate\Routing\ControllerDispatcher-&gt;dispatch()
#5 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Route.php(176): Illuminate\Routing\Route-&gt;runController()
#6 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(680): Illuminate\Routing\Route-&gt;run()
#7 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(130): Illuminate\Routing\Router-&gt;Illuminate\Routing\{closure}()
#8 /home/vagrant/ProjectLaravel/app/Http/Middleware/SetLocale.php(24): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#9 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): App\Http\Middleware\SetLocale-&gt;handle()
#10 /home/vagrant/ProjectLaravel/app/Http/Middleware/AuthGates.php(32): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#11 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): App\Http\Middleware\AuthGates-&gt;handle()
#12 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php(41): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#13 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Routing\Middleware\SubstituteBindings-&gt;handle()
#14 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Auth/Middleware/Authenticate.php(43): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#15 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Auth\Middleware\Authenticate-&gt;handle()
#16 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php(75): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#17 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\VerifyCsrfToken-&gt;handle()
#18 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php(49): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#19 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\View\Middleware\ShareErrorsFromSession-&gt;handle()
#20 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php(56): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#21 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Session\Middleware\StartSession-&gt;handle()
#22 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php(37): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#23 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse-&gt;handle()
#24 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(105): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#25 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(682): Illuminate\Pipeline\Pipeline-&gt;then()
#26 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(657): Illuminate\Routing\Router-&gt;runRouteWithinStack()
#27 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(623): Illuminate\Routing\Router-&gt;runRoute()
#28 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(612): Illuminate\Routing\Router-&gt;dispatchToRoute()
#29 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(176): Illuminate\Routing\Router-&gt;dispatch()
#30 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(130): Illuminate\Foundation\Http\Kernel-&gt;Illuminate\Foundation\Http\{closure}()
#31 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#32 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#33 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php(62): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#34 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode-&gt;handle()
#35 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php(27): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#36 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\ValidatePostSize-&gt;handle()
#37 /home/vagrant/ProjectLaravel/vendor/fideloper/proxy/src/TrustProxies.php(57): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#38 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Fideloper\Proxy\TrustProxies-&gt;handle()
#39 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#40 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#41 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(105): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#42 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(151): Illuminate\Pipeline\Pipeline-&gt;then()
#43 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(116): Illuminate\Foundation\Http\Kernel-&gt;sendRequestThroughRouter()
#44 /home/vagrant/ProjectLaravel/public/index.php(55): Illuminate\Foundation\Http\Kernel-&gt;handle()
#45 {main}
&lt;/pre&gt;&lt;/noscript&gt;

&lt;div id="app"&gt;&lt;/div&gt;

&lt;script&gt;
    window.Ignition = window.ignite(window.data);
&lt;/script&gt;
&lt;script&gt;
    Ignition.start();
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;
</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/admin/system-calendar</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="Referer" value="http://b3789e93786d.ngrok.io/admin"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
            <header name="Accept-Language" value="en-US,*"/>
            <header name="Host" value="b3789e93786d.ngrok.io"/>
          </headers>
          <body/>
          <raw>GET /admin/system-calendar HTTP/1.1&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Referer: http://b3789e93786d.ngrok.io/admin&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
Accept-Language: en-US,*&#xD;
Host: b3789e93786d.ngrok.io&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/admin/system-calendar</url>
          <code>500</code>
          <ip_address>3.17.7.232</ip_address>
          <time>2.063</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:39:17 GMT"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:39:17 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:39:17 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!doctype html&gt;
&lt;html class="theme-light"&gt;
&lt;head&gt;
    &lt;!-- Hide dumps asap --&gt;
    &lt;style&gt;
        pre.sf-dump {
            display: none !important;
        }
    &lt;/style&gt;

    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport"
          content="width=device-width, initial-scale=1.0"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;
    &lt;meta name="robots" content="noindex, nofollow"&gt;

    &lt;title&gt;&#x1F9E8; Trying to get property 'name' of non-object&lt;/title&gt;

    
    &lt;link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css"&gt;

    &lt;script src="http://b3789e93786d.ngrok.io/_ignition/assets"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body class="scrollbar-lg"&gt;

&lt;script&gt;
    window.data = {"report":{"notifier":"Laravel Client","language":"PHP","framework_version":"6.0.3","language_version":"7.4.11","exception_class":"ErrorException","seen_at":1604309957,"message":"Trying to get property \u0027name\u0027 of non-object","glows":[],"solutions":[],"stacktrace":[{"line_number":23,"method":"handleError","class":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions","code_snippet":{"2":"","3":"namespace App\\Http\\Controllers\\Admin;","4":"","5":"use App\\Appointment;","6":"use App\\Http\\Controllers\\Controller;","7":"","8":"class SystemCalendarController extends Controller","9":"{","10":"","11":"    public function index()","12":"    {","13":"        $events = [];","14":"","15":"        $appointments = Appointment::with([\u0027client\u0027, \u0027employee\u0027])-\u003Eget();","16":"","17":"        foreach ($appointments as $appointment) {","18":"            if (!$appointment-\u003Estart_time) {","19":"                continue;","20":"            }","21":"","22":"            $events[] = [","23":"                \u0027title\u0027 =\u003E $appointment-\u003Eclient-\u003Ename . \u0027 (\u0027.$appointment-\u003Eemployee-\u003Ename.\u0027)\u0027,","24":"                \u0027start\u0027 =\u003E $appointment-\u003Estart_time,","25":"                \u0027url\u0027   =\u003E route(\u0027admin.appointments.edit\u0027, $appointment-\u003Eid),","26":"            ];","27":"        }","28":"","29":"        return view(\u0027admin.calendar.calendar\u0027, compact(\u0027events\u0027));","30":"    }","31":"}","32":""},"file":"\/home\/vagrant\/ProjectLaravel\/app\/Http\/Controllers\/Admin\/SystemCalendarController.php"},{"line_number":23,"method":"index","class":"App\\Http\\Controllers\\Admin\\SystemCalendarController","code_snippet":{"2":"","3":"namespace App\\Http\\Controllers\\Admin;","4":"","5":"use App\\Appointment;","6":"use App\\Http\\Controllers\\Controller;","7":"","8":"class SystemCalendarController extends Controller","9":"{","10":"","11":"    public function index()","12":"    {","13":"        $events = [];","14":"","15":"        $appointments = Appointment::with([\u0027client\u0027, \u0027employee\u0027])-\u003Eget();","16":"","17":"        foreach ($appointments as $appointment) {","18":"            if (!$appointment-\u003Estart_time) {","19":"                continue;","20":"            }","21":"","22":"            $events[] = [","23":"                \u0027title\u0027 =\u003E $appointment-\u003Eclient-\u003Ename . \u0027 (\u0027.$appointment-\u003Eemployee-\u003Ename.\u0027)\u0027,","24":"                \u0027start\u0027 =\u003E $appointment-\u003Estart_time,","25":"                \u0027url\u0027   =\u003E route(\u0027admin.appointments.edit\u0027, $appointment-\u003Eid),","26":"            ];","27":"        }","28":"","29":"        return view(\u0027admin.calendar.calendar\u0027, compact(\u0027events\u0027));","30":"    }","31":"}","32":""},"file":"\/home\/vagrant\/ProjectLaravel\/app\/Http\/Controllers\/Admin\/SystemCalendarController.php"},{"line_number":0,"method":"call_user_func_array","class":null,"code_snippet":[],"file":"unknown"},{"line_number":54,"method":"callAction","class":"Illuminate\\Routing\\Controller","code_snippet":{"39":"     *\/","40":"    public function getMiddleware()","41":"    {","42":"        return $this-\u003Emiddleware;","43":"    }","44":"","45":"    \/**","46":"     * Execute an action on the controller.","47":"     *","48":"     * @param  string  $method","49":"     * @param  array   $parameters","50":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","51":"     *\/","52":"    public function callAction($method, $parameters)","53":"    {","54":"        return call_user_func_array([$this, $method], $parameters);","55":"    }","56":"","57":"    \/**","58":"     * Handle calls to missing methods on the controller.","59":"     *","60":"     * @param  string  $method","61":"     * @param  array   $parameters","62":"     * @return mixed","63":"     *","64":"     * @throws \\BadMethodCallException","65":"     *\/","66":"    public function __call($method, $parameters)","67":"    {","68":"        throw new BadMethodCallException(sprintf(","69":"            \u0027Method %s::%s does not exist.\u0027, static::class, $method"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Controller.php"},{"line_number":45,"method":"dispatch","class":"Illuminate\\Routing\\ControllerDispatcher","code_snippet":{"30":"    \/**","31":"     * Dispatch a request to a given controller and method.","32":"     *","33":"     * @param  \\Illuminate\\Routing\\Route  $route","34":"     * @param  mixed  $controller","35":"     * @param  string  $method","36":"     * @return mixed","37":"     *\/","38":"    public function dispatch(Route $route, $controller, $method)","39":"    {","40":"        $parameters = $this-\u003EresolveClassMethodDependencies(","41":"            $route-\u003EparametersWithoutNulls(), $controller, $method","42":"        );","43":"","44":"        if (method_exists($controller, \u0027callAction\u0027)) {","45":"            return $controller-\u003EcallAction($method, $parameters);","46":"        }","47":"","48":"        return $controller-\u003E{$method}(...array_values($parameters));","49":"    }","50":"","51":"    \/**","52":"     * Get the middleware for the controller instance.","53":"     *","54":"     * @param  \\Illuminate\\Routing\\Controller  $controller","55":"     * @param  string  $method","56":"     * @return array","57":"     *\/","58":"    public function getMiddleware($controller, $method)","59":"    {","60":"        if (! method_exists($controller, \u0027getMiddleware\u0027)) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/ControllerDispatcher.php"},{"line_number":219,"method":"runController","class":"Illuminate\\Routing\\Route","code_snippet":{"204":"        return $callable(...array_values($this-\u003EresolveMethodDependencies(","205":"            $this-\u003EparametersWithoutNulls(), new ReflectionFunction($this-\u003Eaction[\u0027uses\u0027])","206":"        )));","207":"    }","208":"","209":"    \/**","210":"     * Run the route action and return the response.","211":"     *","212":"     * @return mixed","213":"     *","214":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException","215":"     *\/","216":"    protected function runController()","217":"    {","218":"        return $this-\u003EcontrollerDispatcher()-\u003Edispatch(","219":"            $this, $this-\u003EgetController(), $this-\u003EgetControllerMethod()","220":"        );","221":"    }","222":"","223":"    \/**","224":"     * Get the controller instance for the route.","225":"     *","226":"     * @return mixed","227":"     *\/","228":"    public function getController()","229":"    {","230":"        if (! $this-\u003Econtroller) {","231":"            $class = $this-\u003EparseControllerCallback()[0];","232":"","233":"            $this-\u003Econtroller = $this-\u003Econtainer-\u003Emake(ltrim($class, \u0027\\\\\u0027));","234":"        }"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Route.php"},{"line_number":176,"method":"run","class":"Illuminate\\Routing\\Route","code_snippet":{"161":"    {","162":"        return RouteAction::parse($this-\u003Euri, $action);","163":"    }","164":"","165":"    \/**","166":"     * Run the route action and return the response.","167":"     *","168":"     * @return mixed","169":"     *\/","170":"    public function run()","171":"    {","172":"        $this-\u003Econtainer = $this-\u003Econtainer ?: new Container;","173":"","174":"        try {","175":"            if ($this-\u003EisControllerAction()) {","176":"                return $this-\u003ErunController();","177":"            }","178":"","179":"            return $this-\u003ErunCallable();","180":"        } catch (HttpResponseException $e) {","181":"            return $e-\u003EgetResponse();","182":"        }","183":"    }","184":"","185":"    \/**","186":"     * Checks whether the route\u0027s action is a controller.","187":"     *","188":"     * @return bool","189":"     *\/","190":"    protected function isControllerAction()","191":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Route.php"},{"line_number":680,"method":"Illuminate\\Routing\\{closure}","class":"Illuminate\\Routing\\Router","code_snippet":{"665":"     * @param  \\Illuminate\\Http\\Request  $request","666":"     * @return mixed","667":"     *\/","668":"    protected function runRouteWithinStack(Route $route, Request $request)","669":"    {","670":"        $shouldSkipMiddleware = $this-\u003Econtainer-\u003Ebound(\u0027middleware.disable\u0027) \u0026\u0026","671":"                                $this-\u003Econtainer-\u003Emake(\u0027middleware.disable\u0027) === true;","672":"","673":"        $middleware = $shouldSkipMiddleware ? [] : $this-\u003EgatherRouteMiddleware($route);","674":"","675":"        return (new Pipeline($this-\u003Econtainer))","676":"                        -\u003Esend($request)","677":"                        -\u003Ethrough($middleware)","678":"                        -\u003Ethen(function ($request) use ($route) {","679":"                            return $this-\u003EprepareResponse(","680":"                                $request, $route-\u003Erun()","681":"                            );","682":"                        });","683":"    }","684":"","685":"    \/**","686":"     * Gather the middleware for the given route with resolved class names.","687":"     *","688":"     * @param  \\Illuminate\\Routing\\Route  $route","689":"     * @return array","690":"     *\/","691":"    public function gatherRouteMiddleware(Route $route)","692":"    {","693":"        $middleware = collect($route-\u003EgatherMiddleware())-\u003Emap(function ($name) {","694":"            return (array) MiddlewareNameResolver::resolve($name, $this-\u003Emiddleware, $this-\u003EmiddlewareGroups);","695":"        })-\u003Eflatten();"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":130,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**","121":"     * Get the final piece of the Closure onion.","122":"     *","123":"     * @param  \\Closure  $destination","124":"     * @return \\Closure","125":"     *\/","126":"    protected function prepareDestination(Closure $destination)","127":"    {","128":"        return function ($passable) use ($destination) {","129":"            try {","130":"                return $destination($passable);","131":"            } catch (Exception $e) {","132":"                return $this-\u003EhandleException($passable, $e);","133":"            } catch (Throwable $e) {","134":"                return $this-\u003EhandleException($passable, new FatalThrowableError($e));","135":"            }","136":"        };","137":"    }","138":"","139":"    \/**","140":"     * Get a Closure that represents a slice of the application onion.","141":"     *","142":"     * @return \\Closure","143":"     *\/","144":"    protected function carry()","145":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":24,"method":"handle","class":"App\\Http\\Middleware\\SetLocale","code_snippet":{"1":"\u003C?php","2":"","3":"namespace App\\Http\\Middleware;","4":"","5":"use Closure;","6":"","7":"class SetLocale","8":"{","9":"    public function handle($request, Closure $next)","10":"    {","11":"        if (request(\u0027change_language\u0027)) {","12":"            session()-\u003Eput(\u0027language\u0027, request(\u0027change_language\u0027));","13":"            $language = request(\u0027change_language\u0027);","14":"        } elseif (session(\u0027language\u0027)) {","15":"            $language = session(\u0027language\u0027);","16":"        } elseif (config(\u0027panel.primary_language\u0027)) {","17":"            $language = config(\u0027panel.primary_language\u0027);","18":"        }","19":"","20":"        if (isset($language)) {","21":"            app()-\u003EsetLocale($language);","22":"        }","23":"","24":"        return $next($request);","25":"    }","26":"}","27":""},"file":"\/home\/vagrant\/ProjectLaravel\/app\/Http\/Middleware\/SetLocale.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":32,"method":"handle","class":"App\\Http\\Middleware\\AuthGates","code_snippet":{"5":"use App\\Role;","6":"use Closure;","7":"use Illuminate\\Support\\Facades\\Gate;","8":"","9":"class AuthGates","10":"{","11":"    public function handle($request, Closure $next)","12":"    {","13":"        $user = \\Auth::user();","14":"","15":"        if (!app()-\u003ErunningInConsole() \u0026\u0026 $user) {","16":"            $roles            = Role::with(\u0027permissions\u0027)-\u003Eget();","17":"            $permissionsArray = [];","18":"","19":"            foreach ($roles as $role) {","20":"                foreach ($role-\u003Epermissions as $permissions) {","21":"                    $permissionsArray[$permissions-\u003Etitle][] = $role-\u003Eid;","22":"                }","23":"            }","24":"","25":"            foreach ($permissionsArray as $title =\u003E $roles) {","26":"                Gate::define($title, function (\\App\\User $user) use ($roles) {","27":"                    return count(array_intersect($user-\u003Eroles-\u003Epluck(\u0027id\u0027)-\u003EtoArray(), $roles)) \u003E 0;","28":"                });","29":"            }","30":"        }","31":"","32":"        return $next($request);","33":"    }","34":"}","35":""},"file":"\/home\/vagrant\/ProjectLaravel\/app\/Http\/Middleware\/AuthGates.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":41,"method":"handle","class":"Illuminate\\Routing\\Middleware\\SubstituteBindings","code_snippet":{"14":"     *\/","15":"    protected $router;","16":"","17":"    \/**","18":"     * Create a new bindings substitutor.","19":"     *","20":"     * @param  \\Illuminate\\Contracts\\Routing\\Registrar  $router","21":"     * @return void","22":"     *\/","23":"    public function __construct(Registrar $router)","24":"    {","25":"        $this-\u003Erouter = $router;","26":"    }","27":"","28":"    \/**","29":"     * Handle an incoming request.","30":"     *","31":"     * @param  \\Illuminate\\Http\\Request  $request","32":"     * @param  \\Closure  $next","33":"     * @return mixed","34":"     *\/","35":"    public function handle($request, Closure $next)","36":"    {","37":"        $this-\u003Erouter-\u003EsubstituteBindings($route = $request-\u003Eroute());","38":"","39":"        $this-\u003Erouter-\u003EsubstituteImplicitBindings($route);","40":"","41":"        return $next($request);","42":"    }","43":"}","44":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Middleware\/SubstituteBindings.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":43,"method":"handle","class":"Illuminate\\Auth\\Middleware\\Authenticate","code_snippet":{"28":"","29":"    \/**","30":"     * Handle an incoming request.","31":"     *","32":"     * @param  \\Illuminate\\Http\\Request  $request","33":"     * @param  \\Closure  $next","34":"     * @param  string[]  ...$guards","35":"     * @return mixed","36":"     *","37":"     * @throws \\Illuminate\\Auth\\AuthenticationException","38":"     *\/","39":"    public function handle($request, Closure $next, ...$guards)","40":"    {","41":"        $this-\u003Eauthenticate($request, $guards);","42":"","43":"        return $next($request);","44":"    }","45":"","46":"    \/**","47":"     * Determine if the user is logged in to any of the given guards.","48":"     *","49":"     * @param  \\Illuminate\\Http\\Request  $request","50":"     * @param  array  $guards","51":"     * @return void","52":"     *","53":"     * @throws \\Illuminate\\Auth\\AuthenticationException","54":"     *\/","55":"    protected function authenticate($request, array $guards)","56":"    {","57":"        if (empty($guards)) {","58":"            $guards = [null];"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Auth\/Middleware\/Authenticate.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":75,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken","code_snippet":{"60":"     *","61":"     * @param  \\Illuminate\\Http\\Request  $request","62":"     * @param  \\Closure  $next","63":"     * @return mixed","64":"     *","65":"     * @throws \\Illuminate\\Session\\TokenMismatchException","66":"     *\/","67":"    public function handle($request, Closure $next)","68":"    {","69":"        if (","70":"            $this-\u003EisReading($request) ||","71":"            $this-\u003ErunningUnitTests() ||","72":"            $this-\u003EinExceptArray($request) ||","73":"            $this-\u003EtokensMatch($request)","74":"        ) {","75":"            return tap($next($request), function ($response) use ($request) {","76":"                if ($this-\u003EshouldAddXsrfTokenCookie()) {","77":"                    $this-\u003EaddCookieToResponse($request, $response);","78":"                }","79":"            });","80":"        }","81":"","82":"        throw new TokenMismatchException(\u0027CSRF token mismatch.\u0027);","83":"    }","84":"","85":"    \/**","86":"     * Determine if the HTTP request uses a \u2018read\u2019 verb.","87":"     *","88":"     * @param  \\Illuminate\\Http\\Request  $request","89":"     * @return bool","90":"     *\/"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/VerifyCsrfToken.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":49,"method":"handle","class":"Illuminate\\View\\Middleware\\ShareErrorsFromSession","code_snippet":{"22":"     * @return void","23":"     *\/","24":"    public function __construct(ViewFactory $view)","25":"    {","26":"        $this-\u003Eview = $view;","27":"    }","28":"","29":"    \/**","30":"     * Handle an incoming request.","31":"     *","32":"     * @param  \\Illuminate\\Http\\Request  $request","33":"     * @param  \\Closure  $next","34":"     * @return mixed","35":"     *\/","36":"    public function handle($request, Closure $next)","37":"    {","38":"        \/\/ If the current session has an \u0022errors\u0022 variable bound to it, we will share","39":"        \/\/ its value with all view instances so the views can easily access errors","40":"        \/\/ without having to bind. An empty bag is set when there aren\u0027t errors.","41":"        $this-\u003Eview-\u003Eshare(","42":"            \u0027errors\u0027, $request-\u003Esession()-\u003Eget(\u0027errors\u0027) ?: new ViewErrorBag","43":"        );","44":"","45":"        \/\/ Putting the errors in the view for every view allows the developer to just","46":"        \/\/ assume that some errors are always available, which is convenient since","47":"        \/\/ they don\u0027t have to continually run checks for the presence of errors.","48":"","49":"        return $next($request);","50":"    }","51":"}","52":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/View\/Middleware\/ShareErrorsFromSession.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":56,"method":"handle","class":"Illuminate\\Session\\Middleware\\StartSession","code_snippet":{"41":"    public function handle($request, Closure $next)","42":"    {","43":"        if (! $this-\u003EsessionConfigured()) {","44":"            return $next($request);","45":"        }","46":"","47":"        \/\/ If a session driver has been configured, we will need to start the session here","48":"        \/\/ so that the data is ready for an application. Note that the Laravel sessions","49":"        \/\/ do not make use of PHP \u0022native\u0022 sessions in any way since they are crappy.","50":"        $request-\u003EsetLaravelSession(","51":"            $session = $this-\u003EstartSession($request)","52":"        );","53":"","54":"        $this-\u003EcollectGarbage($session);","55":"","56":"        $response = $next($request);","57":"","58":"        $this-\u003EstoreCurrentUrl($request, $session);","59":"","60":"        $this-\u003EaddCookieToResponse($response, $session);","61":"","62":"        \/\/ Again, if the session has been configured we will need to close out the session","63":"        \/\/ so that the attributes may be persisted to some storage medium. We will also","64":"        \/\/ add the session identifier cookie to the application response headers now.","65":"        $this-\u003EsaveSession($request);","66":"","67":"        return $response;","68":"    }","69":"","70":"    \/**","71":"     * Start the session for the given request."},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Session\/Middleware\/StartSession.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":37,"method":"handle","class":"Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse","code_snippet":{"16":"","17":"    \/**","18":"     * Create a new CookieQueue instance.","19":"     *","20":"     * @param  \\Illuminate\\Contracts\\Cookie\\QueueingFactory  $cookies","21":"     * @return void","22":"     *\/","23":"    public function __construct(CookieJar $cookies)","24":"    {","25":"        $this-\u003Ecookies = $cookies;","26":"    }","27":"","28":"    \/**","29":"     * Handle an incoming request.","30":"     *","31":"     * @param  \\Illuminate\\Http\\Request  $request","32":"     * @param  \\Closure  $next","33":"     * @return mixed","34":"     *\/","35":"    public function handle($request, Closure $next)","36":"    {","37":"        $response = $next($request);","38":"","39":"        foreach ($this-\u003Ecookies-\u003EgetQueuedCookies() as $cookie) {","40":"            $response-\u003Eheaders-\u003EsetCookie($cookie);","41":"        }","42":"","43":"        return $response;","44":"    }","45":"}","46":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Cookie\/Middleware\/AddQueuedCookiesToResponse.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":105,"method":"then","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"90":"        return $this;","91":"    }","92":"","93":"    \/**","94":"     * Run the pipeline with a final destination callback.","95":"     *","96":"     * @param  \\Closure  $destination","97":"     * @return mixed","98":"     *\/","99":"    public function then(Closure $destination)","100":"    {","101":"        $pipeline = array_reduce(","102":"            array_reverse($this-\u003Epipes), $this-\u003Ecarry(), $this-\u003EprepareDestination($destination)","103":"        );","104":"","105":"        return $pipeline($this-\u003Epassable);","106":"    }","107":"","108":"    \/**","109":"     * Run the pipeline and return the result.","110":"     *","111":"     * @return mixed","112":"     *\/","113":"    public function thenReturn()","114":"    {","115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":682,"method":"runRouteWithinStack","class":"Illuminate\\Routing\\Router","code_snippet":{"667":"     *\/","668":"    protected function runRouteWithinStack(Route $route, Request $request)","669":"    {","670":"        $shouldSkipMiddleware = $this-\u003Econtainer-\u003Ebound(\u0027middleware.disable\u0027) \u0026\u0026","671":"                                $this-\u003Econtainer-\u003Emake(\u0027middleware.disable\u0027) === true;","672":"","673":"        $middleware = $shouldSkipMiddleware ? [] : $this-\u003EgatherRouteMiddleware($route);","674":"","675":"        return (new Pipeline($this-\u003Econtainer))","676":"                        -\u003Esend($request)","677":"                        -\u003Ethrough($middleware)","678":"                        -\u003Ethen(function ($request) use ($route) {","679":"                            return $this-\u003EprepareResponse(","680":"                                $request, $route-\u003Erun()","681":"                            );","682":"                        });","683":"    }","684":"","685":"    \/**","686":"     * Gather the middleware for the given route with resolved class names.","687":"     *","688":"     * @param  \\Illuminate\\Routing\\Route  $route","689":"     * @return array","690":"     *\/","691":"    public function gatherRouteMiddleware(Route $route)","692":"    {","693":"        $middleware = collect($route-\u003EgatherMiddleware())-\u003Emap(function ($name) {","694":"            return (array) MiddlewareNameResolver::resolve($name, $this-\u003Emiddleware, $this-\u003EmiddlewareGroups);","695":"        })-\u003Eflatten();","696":"","697":"        return $this-\u003EsortMiddleware($middleware);"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":657,"method":"runRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"642":"     * Return the response for the given route.","643":"     *","644":"     * @param  \\Illuminate\\Http\\Request  $request","645":"     * @param  \\Illuminate\\Routing\\Route  $route","646":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","647":"     *\/","648":"    protected function runRoute(Request $request, Route $route)","649":"    {","650":"        $request-\u003EsetRouteResolver(function () use ($route) {","651":"            return $route;","652":"        });","653":"","654":"        $this-\u003Eevents-\u003Edispatch(new Events\\RouteMatched($route, $request));","655":"","656":"        return $this-\u003EprepareResponse($request,","657":"            $this-\u003ErunRouteWithinStack($route, $request)","658":"        );","659":"    }","660":"","661":"    \/**","662":"     * Run the given route within a Stack \u0022onion\u0022 instance.","663":"     *","664":"     * @param  \\Illuminate\\Routing\\Route  $route","665":"     * @param  \\Illuminate\\Http\\Request  $request","666":"     * @return mixed","667":"     *\/","668":"    protected function runRouteWithinStack(Route $route, Request $request)","669":"    {","670":"        $shouldSkipMiddleware = $this-\u003Econtainer-\u003Ebound(\u0027middleware.disable\u0027) \u0026\u0026","671":"                                $this-\u003Econtainer-\u003Emake(\u0027middleware.disable\u0027) === true;","672":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":623,"method":"dispatchToRoute","class":"Illuminate\\Routing\\Router","code_snippet":{"608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request.","628":"     *","629":"     * @param  \\Illuminate\\Http\\Request  $request","630":"     * @return \\Illuminate\\Routing\\Route","631":"     *\/","632":"    protected function findRoute($request)","633":"    {","634":"        $this-\u003Ecurrent = $route = $this-\u003Eroutes-\u003Ematch($request);","635":"","636":"        $this-\u003Econtainer-\u003Einstance(Route::class, $route);","637":"","638":"        return $route;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":612,"method":"dispatch","class":"Illuminate\\Routing\\Router","code_snippet":{"597":"        $route = tap($this-\u003Eroutes-\u003EgetByName($name))-\u003Ebind($this-\u003EcurrentRequest);","598":"","599":"        return $this-\u003ErunRoute($this-\u003EcurrentRequest, $route);","600":"    }","601":"","602":"    \/**","603":"     * Dispatch the request to the application.","604":"     *","605":"     * @param  \\Illuminate\\Http\\Request  $request","606":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","607":"     *\/","608":"    public function dispatch(Request $request)","609":"    {","610":"        $this-\u003EcurrentRequest = $request;","611":"","612":"        return $this-\u003EdispatchToRoute($request);","613":"    }","614":"","615":"    \/**","616":"     * Dispatch the request to a route and return the response.","617":"     *","618":"     * @param  \\Illuminate\\Http\\Request  $request","619":"     * @return \\Symfony\\Component\\HttpFoundation\\Response","620":"     *\/","621":"    public function dispatchToRoute(Request $request)","622":"    {","623":"        return $this-\u003ErunRoute($request, $this-\u003EfindRoute($request));","624":"    }","625":"","626":"    \/**","627":"     * Find the route matching a given request."},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Router.php"},{"line_number":176,"method":"Illuminate\\Foundation\\Http\\{closure}","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**","167":"     * Get the route dispatcher callback.","168":"     *","169":"     * @return \\Closure","170":"     *\/","171":"    protected function dispatchToRouter()","172":"    {","173":"        return function ($request) {","174":"            $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","175":"","176":"            return $this-\u003Erouter-\u003Edispatch($request);","177":"        };","178":"    }","179":"","180":"    \/**","181":"     * Call the terminate method on any terminable middleware.","182":"     *","183":"     * @param  \\Illuminate\\Http\\Request  $request","184":"     * @param  \\Illuminate\\Http\\Response  $response","185":"     * @return void","186":"     *\/","187":"    public function terminate($request, $response)","188":"    {","189":"        $this-\u003EterminateMiddleware($request, $response);","190":"","191":"        $this-\u003Eapp-\u003Eterminate();"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":130,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**","121":"     * Get the final piece of the Closure onion.","122":"     *","123":"     * @param  \\Closure  $destination","124":"     * @return \\Closure","125":"     *\/","126":"    protected function prepareDestination(Closure $destination)","127":"    {","128":"        return function ($passable) use ($destination) {","129":"            try {","130":"                return $destination($passable);","131":"            } catch (Exception $e) {","132":"                return $this-\u003EhandleException($passable, $e);","133":"            } catch (Throwable $e) {","134":"                return $this-\u003EhandleException($passable, new FatalThrowableError($e));","135":"            }","136":"        };","137":"    }","138":"","139":"    \/**","140":"     * Get a Closure that represents a slice of the application onion.","141":"     *","142":"     * @return \\Closure","143":"     *\/","144":"    protected function carry()","145":"    {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":62,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode","code_snippet":{"47":"    {","48":"        if ($this-\u003Eapp-\u003EisDownForMaintenance()) {","49":"            $data = json_decode(file_get_contents($this-\u003Eapp-\u003EstoragePath().\u0027\/framework\/down\u0027), true);","50":"","51":"            if (isset($data[\u0027allowed\u0027]) \u0026\u0026 IpUtils::checkIp($request-\u003Eip(), (array) $data[\u0027allowed\u0027])) {","52":"                return $next($request);","53":"            }","54":"","55":"            if ($this-\u003EinExceptArray($request)) {","56":"                return $next($request);","57":"            }","58":"","59":"            throw new MaintenanceModeException($data[\u0027time\u0027], $data[\u0027retry\u0027], $data[\u0027message\u0027]);","60":"        }","61":"","62":"        return $next($request);","63":"    }","64":"","65":"    \/**","66":"     * Determine if the request has a URI that should be accessible in maintenance mode.","67":"     *","68":"     * @param  \\Illuminate\\Http\\Request  $request","69":"     * @return bool","70":"     *\/","71":"    protected function inExceptArray($request)","72":"    {","73":"        foreach ($this-\u003Eexcept as $except) {","74":"            if ($except !== \u0027\/\u0027) {","75":"                $except = trim($except, \u0027\/\u0027);","76":"            }","77":""},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/CheckForMaintenanceMode.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":27,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize","code_snippet":{"12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *","17":"     * @throws \\Illuminate\\Http\\Exceptions\\PostTooLargeException","18":"     *\/","19":"    public function handle($request, Closure $next)","20":"    {","21":"        $max = $this-\u003EgetPostMaxSize();","22":"","23":"        if ($max \u003E 0 \u0026\u0026 $request-\u003Eserver(\u0027CONTENT_LENGTH\u0027) \u003E $max) {","24":"            throw new PostTooLargeException;","25":"        }","26":"","27":"        return $next($request);","28":"    }","29":"","30":"    \/**","31":"     * Determine the server \u0027post_max_size\u0027 as bytes.","32":"     *","33":"     * @return int","34":"     *\/","35":"    protected function getPostMaxSize()","36":"    {","37":"        if (is_numeric($postMaxSize = ini_get(\u0027post_max_size\u0027))) {","38":"            return (int) $postMaxSize;","39":"        }","40":"","41":"        $metric = strtoupper(substr($postMaxSize, -1));","42":"        $postMaxSize = (int) $postMaxSize;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/ValidatePostSize.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":57,"method":"handle","class":"Fideloper\\Proxy\\TrustProxies","code_snippet":{"42":"    \/**","43":"     * Handle an incoming request.","44":"     *","45":"     * @param \\Illuminate\\Http\\Request $request","46":"     * @param \\Closure                 $next","47":"     *","48":"     * @throws \\Symfony\\Component\\HttpKernel\\Exception\\HttpException","49":"     *","50":"     * @return mixed","51":"     *\/","52":"    public function handle(Request $request, Closure $next)","53":"    {","54":"        $request::setTrustedProxies([], $this-\u003EgetTrustedHeaderNames()); \/\/ Reset trusted proxies between requests","55":"        $this-\u003EsetTrustedProxyIpAddresses($request);","56":"","57":"        return $next($request);","58":"    }","59":"","60":"    \/**","61":"     * Sets the trusted proxies on the request to the value of trustedproxy.proxies","62":"     *","63":"     * @param \\Illuminate\\Http\\Request $request","64":"     *\/","65":"    protected function setTrustedProxyIpAddresses(Request $request)","66":"    {","67":"        $trustedIps = $this-\u003Eproxies ?: $this-\u003Econfig-\u003Eget(\u0027trustedproxy.proxies\u0027);","68":"","69":"        \/\/ Trust any IP address that calls us","70":"        \/\/ `**` for backwards compatibility, but is deprecated","71":"        if ($trustedIps === \u0027*\u0027 || $trustedIps === \u0027**\u0027) {","72":"            return $this-\u003EsetTrustedProxyIpAddressesToTheCallingIp($request);"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/fideloper\/proxy\/src\/TrustProxies.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":21,"method":"handle","class":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","code_snippet":{"6":"use Symfony\\Component\\HttpFoundation\\ParameterBag;","7":"","8":"class TransformsRequest","9":"{","10":"    \/**","11":"     * Handle an incoming request.","12":"     *","13":"     * @param  \\Illuminate\\Http\\Request  $request","14":"     * @param  \\Closure  $next","15":"     * @return mixed","16":"     *\/","17":"    public function handle($request, Closure $next)","18":"    {","19":"        $this-\u003Eclean($request);","20":"","21":"        return $next($request);","22":"    }","23":"","24":"    \/**","25":"     * Clean the request\u0027s data.","26":"     *","27":"     * @param  \\Illuminate\\Http\\Request  $request","28":"     * @return void","29":"     *\/","30":"    protected function clean($request)","31":"    {","32":"        $this-\u003EcleanParameterBag($request-\u003Equery);","33":"","34":"        if ($request-\u003EisJson()) {","35":"            $this-\u003EcleanParameterBag($request-\u003Ejson());","36":"        } elseif ($request-\u003Erequest !== $request-\u003Equery) {"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Middleware\/TransformsRequest.php"},{"line_number":171,"method":"Illuminate\\Pipeline\\{closure}","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"156":"","157":"                        \/\/ If the pipe is a string we will parse the string and resolve the class out","158":"                        \/\/ of the dependency injection container. We can then build a callable and","159":"                        \/\/ execute the pipe function giving in the parameters that are required.","160":"                        $pipe = $this-\u003EgetContainer()-\u003Emake($name);","161":"","162":"                        $parameters = array_merge([$passable, $stack], $parameters);","163":"                    } else {","164":"                        \/\/ If the pipe is already an object we\u0027ll just make a callable and pass it to","165":"                        \/\/ the pipe as-is. There is no need to do any extra parsing and formatting","166":"                        \/\/ since the object we\u0027re given was already a fully instantiated object.","167":"                        $parameters = [$passable, $stack];","168":"                    }","169":"","170":"                    $carry = method_exists($pipe, $this-\u003Emethod)","171":"                                    ? $pipe-\u003E{$this-\u003Emethod}(...$parameters)","172":"                                    : $pipe(...$parameters);","173":"","174":"                    return $this-\u003EhandleCarry($carry);","175":"                } catch (Exception $e) {","176":"                    return $this-\u003EhandleException($passable, $e);","177":"                } catch (Throwable $e) {","178":"                    return $this-\u003EhandleException($passable, new FatalThrowableError($e));","179":"                }","180":"            };","181":"        };","182":"    }","183":"","184":"    \/**","185":"     * Parse full pipe string to get name and parameters.","186":"     *"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":105,"method":"then","class":"Illuminate\\Pipeline\\Pipeline","code_snippet":{"90":"        return $this;","91":"    }","92":"","93":"    \/**","94":"     * Run the pipeline with a final destination callback.","95":"     *","96":"     * @param  \\Closure  $destination","97":"     * @return mixed","98":"     *\/","99":"    public function then(Closure $destination)","100":"    {","101":"        $pipeline = array_reduce(","102":"            array_reverse($this-\u003Epipes), $this-\u003Ecarry(), $this-\u003EprepareDestination($destination)","103":"        );","104":"","105":"        return $pipeline($this-\u003Epassable);","106":"    }","107":"","108":"    \/**","109":"     * Run the pipeline and return the result.","110":"     *","111":"     * @return mixed","112":"     *\/","113":"    public function thenReturn()","114":"    {","115":"        return $this-\u003Ethen(function ($passable) {","116":"            return $passable;","117":"        });","118":"    }","119":"","120":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Pipeline\/Pipeline.php"},{"line_number":151,"method":"sendRequestThroughRouter","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"136":"     *","137":"     * @param  \\Illuminate\\Http\\Request  $request","138":"     * @return \\Illuminate\\Http\\Response","139":"     *\/","140":"    protected function sendRequestThroughRouter($request)","141":"    {","142":"        $this-\u003Eapp-\u003Einstance(\u0027request\u0027, $request);","143":"","144":"        Facade::clearResolvedInstance(\u0027request\u0027);","145":"","146":"        $this-\u003Ebootstrap();","147":"","148":"        return (new Pipeline($this-\u003Eapp))","149":"                    -\u003Esend($request)","150":"                    -\u003Ethrough($this-\u003Eapp-\u003EshouldSkipMiddleware() ? [] : $this-\u003Emiddleware)","151":"                    -\u003Ethen($this-\u003EdispatchToRouter());","152":"    }","153":"","154":"    \/**","155":"     * Bootstrap the application for HTTP requests.","156":"     *","157":"     * @return void","158":"     *\/","159":"    public function bootstrap()","160":"    {","161":"        if (! $this-\u003Eapp-\u003EhasBeenBootstrapped()) {","162":"            $this-\u003Eapp-\u003EbootstrapWith($this-\u003Ebootstrappers());","163":"        }","164":"    }","165":"","166":"    \/**"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":116,"method":"handle","class":"Illuminate\\Foundation\\Http\\Kernel","code_snippet":{"101":"            $router-\u003EaliasMiddleware($key, $middleware);","102":"        }","103":"    }","104":"","105":"    \/**","106":"     * Handle an incoming HTTP request.","107":"     *","108":"     * @param  \\Illuminate\\Http\\Request  $request","109":"     * @return \\Illuminate\\Http\\Response","110":"     *\/","111":"    public function handle($request)","112":"    {","113":"        try {","114":"            $request-\u003EenableHttpMethodParameterOverride();","115":"","116":"            $response = $this-\u003EsendRequestThroughRouter($request);","117":"        } catch (Exception $e) {","118":"            $this-\u003EreportException($e);","119":"","120":"            $response = $this-\u003ErenderException($request, $e);","121":"        } catch (Throwable $e) {","122":"            $this-\u003EreportException($e = new FatalThrowableError($e));","123":"","124":"            $response = $this-\u003ErenderException($request, $e);","125":"        }","126":"","127":"        $this-\u003Eapp[\u0027events\u0027]-\u003Edispatch(","128":"            new Events\\RequestHandled($request, $response)","129":"        );","130":"","131":"        return $response;"},"file":"\/home\/vagrant\/ProjectLaravel\/vendor\/laravel\/framework\/src\/Illuminate\/Foundation\/Http\/Kernel.php"},{"line_number":55,"method":"[top]","class":null,"code_snippet":{"31":"| We need to illuminate PHP development, so let us turn on the lights.","32":"| This bootstraps the framework and gets it ready for use, then it","33":"| will load up this application so that we can run it and send","34":"| the responses back to the browser and delight our users.","35":"|","36":"*\/","37":"","38":"$app = require_once __DIR__.\u0027\/..\/bootstrap\/app.php\u0027;","39":"","40":"\/*","41":"|--------------------------------------------------------------------------","42":"| Run The Application","43":"|--------------------------------------------------------------------------","44":"|","45":"| Once we have the application, we can handle the incoming request","46":"| through the kernel, and send the associated response back to","47":"| the client\u0027s browser allowing them to enjoy the creative","48":"| and wonderful application we have prepared for them.","49":"|","50":"*\/","51":"","52":"$kernel = $app-\u003Emake(Illuminate\\Contracts\\Http\\Kernel::class);","53":"","54":"$response = $kernel-\u003Ehandle(","55":"    $request = Illuminate\\Http\\Request::capture()","56":");","57":"","58":"$response-\u003Esend();","59":"","60":"$kernel-\u003Eterminate($request, $response);","61":""},"file":"\/home\/vagrant\/ProjectLaravel\/public\/index.php"}],"context":{"request":{"url":"http:\/\/b3789e93786d.ngrok.io\/admin\/system-calendar","ip":null,"method":"GET","useragent":"Arachni\/v2.0dev"},"request_data":{"queryString":[],"body":[],"files":[]},"headers":{"x-forwarded-for":["115.134.146.242"],"host":["b3789e93786d.ngrok.io"],"accept-language":["en-US,*"],"cookie":["XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"],"referer":["http:\/\/b3789e93786d.ngrok.io\/admin"],"accept":["text\/html,application\/xhtml+xml,application\/xml;q=0.9,*\/*;q=0.8"],"user-agent":["Arachni\/v2.0dev"],"accept-encoding":["gzip, deflate"],"content-length":[""],"content-type":[""]},"cookies":{"XSRF-TOKEN":"cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t","laravel_session":"rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"},"session":{"_token":"cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t","_previous":{"url":"http:\/\/b3789e93786d.ngrok.io\/admin"},"_flash":{"old":[],"new":[]},"login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d":1},"route":{"route":"admin.systemCalendar","routeParameters":[],"controllerAction":"App\\Http\\Controllers\\Admin\\SystemCalendarController@index","middleware":["web","auth"]},"user":{"id":1,"name":"Admin","email":"admin@admin.com","email_verified_at":null,"created_at":"2019-09-19 12:08:28","updated_at":"2019-09-19 12:08:28","deleted_at":null},"env":{"laravel_version":"6.0.3","laravel_locale":"en","laravel_config_cached":false,"php_version":"7.4.11"},"logs":[],"dumps":[],"queries":[{"sql":"select * from `users` where `id` = ? and `users`.`deleted_at` is null limit 1","time":3.17,"connection_name":"mysql","bindings":[1],"microtime":1604309957.244582},{"sql":"select * from `roles` where `roles`.`deleted_at` is null","time":0.41,"connection_name":"mysql","bindings":[],"microtime":1604309957.247796},{"sql":"select `permissions`.*, `permission_role`.`role_id` as `pivot_role_id`, `permission_role`.`permission_id` as `pivot_permission_id` from `permissions` inner join `permission_role` on `permissions`.`id` = `permission_role`.`permission_id` where `permission_role`.`role_id` in (2) and `permissions`.`deleted_at` is null","time":0.86,"connection_name":"mysql","bindings":[],"microtime":1604309957.251325},{"sql":"select * from `appointments` where `appointments`.`deleted_at` is null","time":0.42,"connection_name":"mysql","bindings":[],"microtime":1604309957.260694},{"sql":"select * from `clients` where `clients`.`id` in (1, 2, 3, 6, 8, 10) and `clients`.`deleted_at` is null","time":0.38,"connection_name":"mysql","bindings":[],"microtime":1604309957.263727},{"sql":"select * from `employees` where `employees`.`id` in (1, 2, 3, 4, 5) and `employees`.`deleted_at` is null","time":0.28,"connection_name":"mysql","bindings":[],"microtime":1604309957.267308}],"git":{"hash":"","message":"","tag":"","remote":"","isDirty":false}},"stage":"local","message_level":null,"application_path":"\/home\/vagrant\/ProjectLaravel"},"config":{"editor":"phpstorm","remoteSitesPath":"","localSitesPath":"","theme":"light","enableShareButton":true,"enableRunnableSolutions":true,"directorySeparator":"\/"},"solutions":[],"telescopeUrl":null,"shareEndpoint":"http:\/\/b3789e93786d.ngrok.io\/_ignition\/share-report"}
    window.tabs = [];
&lt;/script&gt;

&lt;noscript&gt;&lt;pre&gt;ErrorException: Trying to get property 'name' of non-object in file /home/vagrant/ProjectLaravel/app/Http/Controllers/Admin/SystemCalendarController.php on line 23

#0 /home/vagrant/ProjectLaravel/app/Http/Controllers/Admin/SystemCalendarController.php(23): Illuminate\Foundation\Bootstrap\HandleExceptions-&gt;handleError()
#1 [internal function]: App\Http\Controllers\Admin\SystemCalendarController-&gt;index()
#2 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Controller.php(54): call_user_func_array()
#3 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php(45): Illuminate\Routing\Controller-&gt;callAction()
#4 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Route.php(219): Illuminate\Routing\ControllerDispatcher-&gt;dispatch()
#5 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Route.php(176): Illuminate\Routing\Route-&gt;runController()
#6 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(680): Illuminate\Routing\Route-&gt;run()
#7 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(130): Illuminate\Routing\Router-&gt;Illuminate\Routing\{closure}()
#8 /home/vagrant/ProjectLaravel/app/Http/Middleware/SetLocale.php(24): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#9 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): App\Http\Middleware\SetLocale-&gt;handle()
#10 /home/vagrant/ProjectLaravel/app/Http/Middleware/AuthGates.php(32): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#11 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): App\Http\Middleware\AuthGates-&gt;handle()
#12 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php(41): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#13 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Routing\Middleware\SubstituteBindings-&gt;handle()
#14 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Auth/Middleware/Authenticate.php(43): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#15 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Auth\Middleware\Authenticate-&gt;handle()
#16 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php(75): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#17 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\VerifyCsrfToken-&gt;handle()
#18 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php(49): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#19 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\View\Middleware\ShareErrorsFromSession-&gt;handle()
#20 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php(56): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#21 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Session\Middleware\StartSession-&gt;handle()
#22 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php(37): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#23 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse-&gt;handle()
#24 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(105): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#25 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(682): Illuminate\Pipeline\Pipeline-&gt;then()
#26 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(657): Illuminate\Routing\Router-&gt;runRouteWithinStack()
#27 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(623): Illuminate\Routing\Router-&gt;runRoute()
#28 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Routing/Router.php(612): Illuminate\Routing\Router-&gt;dispatchToRoute()
#29 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(176): Illuminate\Routing\Router-&gt;dispatch()
#30 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(130): Illuminate\Foundation\Http\Kernel-&gt;Illuminate\Foundation\Http\{closure}()
#31 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#32 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#33 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php(62): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#34 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode-&gt;handle()
#35 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php(27): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#36 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\ValidatePostSize-&gt;handle()
#37 /home/vagrant/ProjectLaravel/vendor/fideloper/proxy/src/TrustProxies.php(57): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#38 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Fideloper\Proxy\TrustProxies-&gt;handle()
#39 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php(21): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#40 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(171): Illuminate\Foundation\Http\Middleware\TransformsRequest-&gt;handle()
#41 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(105): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}()
#42 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(151): Illuminate\Pipeline\Pipeline-&gt;then()
#43 /home/vagrant/ProjectLaravel/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(116): Illuminate\Foundation\Http\Kernel-&gt;sendRequestThroughRouter()
#44 /home/vagrant/ProjectLaravel/public/index.php(55): Illuminate\Foundation\Http\Kernel-&gt;handle()
#45 {main}
&lt;/pre&gt;&lt;/noscript&gt;

&lt;div id="app"&gt;&lt;/div&gt;

&lt;script&gt;
    window.Ignition = window.ignite(window.data);
&lt;/script&gt;
&lt;script&gt;
    Ignition.start();
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;
</body>
          <raw_headers>HTTP/1.1 500 Internal Server Error&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
date: Mon, 02 Nov 2020 09:39:17 GMT&#xD;
Set-Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:39:17 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:39:17 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/admin/system-calendar</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </page>
      <referring_page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>GET / HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/</url>
          <code>302</code>
          <ip_address>3.14.182.203</ip_address>
          <time>1.031</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:38:56 GMT"/>
            <header name="Location" value="/login"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:38:56 GMT&#xD;
Location: /login&#xD;
Set-Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </referring_page>
      <signature/>
      <proof>HTTP/1.1 500 Internal Server Error</proof>
      <trusted>true</trusted>
      <platform_type/>
      <platform_name/>
    </issue>
    <issue>
      <name>Interesting response</name>
      <description>
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.
</description>
      <remedy_guidance/>
      <remedy_code/>
      <severity>informational</severity>
      <check>
        <name>Interesting responses</name>
        <description>Logs all non 200 (OK) server responses.</description>
        <author>Tasos "Zapotek" Laskos &lt;tasos.laskos@arachni-scanner.com&gt;</author>
        <version>0.2.1</version>
        <shortname>interesting_responses</shortname>
      </check>
      <digest>509587182</digest>
      <references>
        <reference title="w3.org" url="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"/>
      </references>
      <vector>
        <class>Arachni::Element::Server</class>
        <type>server</type>
        <url>http://b3789e93786d.ngrok.io/home</url>
        <action>http://b3789e93786d.ngrok.io/home</action>
      </vector>
      <remarks/>
      <page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/admin" /&gt;

        &lt;title&gt;Redirecting to /admin&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/admin"&gt;/admin&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/home</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>GET /home HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/home</url>
          <code>302</code>
          <ip_address>3.14.182.203</ip_address>
          <time>0.797</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:39:02 GMT"/>
            <header name="Location" value="/admin"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:39:02 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:39:02 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/admin" /&gt;

        &lt;title&gt;Redirecting to /admin&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/admin"&gt;/admin&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:39:02 GMT&#xD;
Location: /admin&#xD;
Set-Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:39:02 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:39:02 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/home</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </page>
      <referring_page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>GET / HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/</url>
          <code>302</code>
          <ip_address>3.14.182.203</ip_address>
          <time>1.031</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:38:56 GMT"/>
            <header name="Location" value="/login"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:38:56 GMT&#xD;
Location: /login&#xD;
Set-Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </referring_page>
      <signature/>
      <proof>HTTP/1.1 302 Found</proof>
      <trusted>true</trusted>
      <platform_type/>
      <platform_name/>
    </issue>
    <issue>
      <name>Interesting response</name>
      <description>
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.
</description>
      <remedy_guidance/>
      <remedy_code/>
      <severity>informational</severity>
      <check>
        <name>Interesting responses</name>
        <description>Logs all non 200 (OK) server responses.</description>
        <author>Tasos "Zapotek" Laskos &lt;tasos.laskos@arachni-scanner.com&gt;</author>
        <version>0.2.1</version>
        <shortname>interesting_responses</shortname>
      </check>
      <digest>2941774722</digest>
      <references>
        <reference title="w3.org" url="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"/>
      </references>
      <vector>
        <class>Arachni::Element::Server</class>
        <type>server</type>
        <url>http://b3789e93786d.ngrok.io/</url>
        <action>http://b3789e93786d.ngrok.io/</action>
      </vector>
      <remarks/>
      <page>
        <body>&lt;html&gt;&#xD;
&lt;head&gt;&lt;title&gt;405 Not Allowed&lt;/title&gt;&lt;/head&gt;&#xD;
&lt;body&gt;&#xD;
&lt;center&gt;&lt;h1&gt;405 Not Allowed&lt;/h1&gt;&lt;/center&gt;&#xD;
&lt;hr&gt;&lt;center&gt;nginx/1.15.8&lt;/center&gt;&#xD;
&lt;/body&gt;&#xD;
&lt;/html&gt;&#xD;
</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/</url>
          <method>options</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>OPTIONS / HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/</url>
          <code>405</code>
          <ip_address>3.14.182.203</ip_address>
          <time>1.0</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:38:59 GMT"/>
            <header name="Content-Type" value="text/html; charset=utf-8"/>
            <header name="Content-Length" value="157"/>
          </headers>
          <body>&lt;html&gt;&#xD;
&lt;head&gt;&lt;title&gt;405 Not Allowed&lt;/title&gt;&lt;/head&gt;&#xD;
&lt;body&gt;&#xD;
&lt;center&gt;&lt;h1&gt;405 Not Allowed&lt;/h1&gt;&lt;/center&gt;&#xD;
&lt;hr&gt;&lt;center&gt;nginx/1.15.8&lt;/center&gt;&#xD;
&lt;/body&gt;&#xD;
&lt;/html&gt;&#xD;
</body>
          <raw_headers>HTTP/1.1 405 Not Allowed&#xD;
Server: nginx/1.15.8&#xD;
Date: Mon, 02 Nov 2020 09:38:59 GMT&#xD;
Content-Type: text/html; charset=utf-8&#xD;
Content-Length: 157&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </page>
      <referring_page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>GET / HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/</url>
          <code>302</code>
          <ip_address>3.14.182.203</ip_address>
          <time>1.031</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:38:56 GMT"/>
            <header name="Location" value="/login"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:38:56 GMT&#xD;
Location: /login&#xD;
Set-Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </referring_page>
      <signature/>
      <proof>HTTP/1.1 405 Not Allowed</proof>
      <trusted>true</trusted>
      <platform_type/>
      <platform_name/>
    </issue>
    <issue>
      <name>Interesting response</name>
      <description>
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.
</description>
      <remedy_guidance/>
      <remedy_code/>
      <severity>informational</severity>
      <check>
        <name>Interesting responses</name>
        <description>Logs all non 200 (OK) server responses.</description>
        <author>Tasos "Zapotek" Laskos &lt;tasos.laskos@arachni-scanner.com&gt;</author>
        <version>0.2.1</version>
        <shortname>interesting_responses</shortname>
      </check>
      <digest>1795579673</digest>
      <references>
        <reference title="w3.org" url="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"/>
      </references>
      <vector>
        <class>Arachni::Element::Server</class>
        <type>server</type>
        <url>http://b3789e93786d.ngrok.io/login</url>
        <action>http://b3789e93786d.ngrok.io/login</action>
      </vector>
      <remarks/>
      <page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=http://b3789e93786d.ngrok.io/home" /&gt;

        &lt;title&gt;Redirecting to http://b3789e93786d.ngrok.io/home&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="http://b3789e93786d.ngrok.io/home"&gt;http://b3789e93786d.ngrok.io/home&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/login</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>GET /login HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/login</url>
          <code>302</code>
          <ip_address>3.14.182.203</ip_address>
          <time>0.75</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:38:59 GMT"/>
            <header name="Location" value="http://b3789e93786d.ngrok.io/home"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:59 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:59 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=http://b3789e93786d.ngrok.io/home" /&gt;

        &lt;title&gt;Redirecting to http://b3789e93786d.ngrok.io/home&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="http://b3789e93786d.ngrok.io/home"&gt;http://b3789e93786d.ngrok.io/home&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:38:59 GMT&#xD;
Location: http://b3789e93786d.ngrok.io/home&#xD;
Set-Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:59 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:59 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/login</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </page>
      <referring_page>
        <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
        <request>
          <url>http://b3789e93786d.ngrok.io/</url>
          <method>get</method>
          <parameters/>
          <headers>
            <header name="Accept" value="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"/>
            <header name="User-Agent" value="Arachni/v2.0dev"/>
            <header name="Accept-Language" value="en-US,en;q=0.8,he;q=0.6"/>
            <header name="X-Arachni-Scan-Seed" value="e726fec99e34eb4301257a91f6c15ec4"/>
            <header name="Cookie" value="XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
          </headers>
          <body/>
          <raw>GET / HTTP/1.1&#xD;
Host: b3789e93786d.ngrok.io&#xD;
Accept-Encoding: gzip, deflate&#xD;
User-Agent: Arachni/v2.0dev&#xD;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#xD;
Accept-Language: en-US,en;q=0.8,he;q=0.6&#xD;
X-Arachni-Scan-Seed: e726fec99e34eb4301257a91f6c15ec4&#xD;
Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ&#xD;
&#xD;
</raw>
        </request>
        <response>
          <url>http://b3789e93786d.ngrok.io/</url>
          <code>302</code>
          <ip_address>3.14.182.203</ip_address>
          <time>1.031</time>
          <return_code>ok</return_code>
          <return_message>No error</return_message>
          <headers>
            <header name="Server" value="nginx/1.15.8"/>
            <header name="Content-Type" value="text/html; charset=UTF-8"/>
            <header name="Transfer-Encoding" value="chunked"/>
            <header name="Cache-Control" value="no-cache, private"/>
            <header name="Date" value="Mon, 02 Nov 2020 09:38:56 GMT"/>
            <header name="Location" value="/login"/>
            <header name="Set-Cookie" value="[&quot;XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&quot;, &quot;laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&quot;]"/>
          </headers>
          <body>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8" /&gt;
        &lt;meta http-equiv="refresh" content="0;url=/login" /&gt;

        &lt;title&gt;Redirecting to /login&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        Redirecting to &lt;a href="/login"&gt;/login&lt;/a&gt;.
    &lt;/body&gt;
&lt;/html&gt;</body>
          <raw_headers>HTTP/1.1 302 Found&#xD;
Server: nginx/1.15.8&#xD;
Content-Type: text/html; charset=UTF-8&#xD;
Transfer-Encoding: chunked&#xD;
Cache-Control: no-cache, private&#xD;
Date: Mon, 02 Nov 2020 09:38:56 GMT&#xD;
Location: /login&#xD;
Set-Cookie: XSRF-TOKEN=cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/&#xD;
Set-Cookie: laravel_session=rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ; expires=Mon, 02-Nov-2020 11:38:56 GMT; Max-Age=7200; path=/; httponly&#xD;
&#xD;
</raw_headers>
        </response>
        <dom>
          <url>http://b3789e93786d.ngrok.io/</url>
          <transitions/>
          <data_flow_sinks/>
          <execution_flow_sinks/>
        </dom>
      </referring_page>
      <signature/>
      <proof>HTTP/1.1 302 Found</proof>
      <trusted>true</trusted>
      <platform_type/>
      <platform_name/>
    </issue>
  </issues>
  <plugins>
    <autologin>
      <name>AutoLogin</name>
      <description>
It looks for the login form in the user provided URL, merges its input fields
with the user supplied parameters and sets the cookies of the response and
request as framework-wide cookies.

**NOTICE**: If the login form is by default hidden and requires a sequence of DOM
interactions in order to become visible, this plugin will not be able to submit it.
</description>
      <results>
        <message>Logged in successfully.</message>
        <status>ok</status>
        <cookies>
          <cookie name="XSRF-TOKEN" value="cDPbxTxUsHz4l0F2KpUaYTCTcEaZuDNJnq6pKy5t"/>
          <cookie name="laravel_session" value="rIO8Odyon3A4z4771BAQ4Kg2miwCRXfC8miubXPZ"/>
        </cookies>
      </results>
    </autologin>
    <healthmap>
      <name>Health map</name>
      <description>Generates a simple list of safe/unsafe URLs.</description>
      <results>
        <map>
          <with_issues>http://b3789e93786d.ngrok.io/</with_issues>
          <without_issues>http://b3789e93786d.ngrok.io/AddQueuedCookiesToResponse.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/AuthGates.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/Authenticate.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/CheckForMaintenanceMode.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/Controller.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/ControllerDispatcher.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/Kernel.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/Pipeline.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/Route.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/RouteCollection.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/Router.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/SetLocale.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/ShareErrorsFromSession.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/StartSession.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/SubstituteBindings.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/SystemCalendarController.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/TransformsRequest.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/TrustProxies.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/ValidatePostSize.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/VerifyCsrfToken.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/_ignition/assets</without_issues>
          <with_issues>http://b3789e93786d.ngrok.io/admin</with_issues>
          <with_issues>http://b3789e93786d.ngrok.io/admin/system-calendar</with_issues>
          <without_issues>http://b3789e93786d.ngrok.io/app.php</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/b3789e93786d.ngrok.io</without_issues>
          <without_issues>http://b3789e93786d.ngrok.io/css/custom.css</without_issues>
          <with_issues>http://b3789e93786d.ngrok.io/home</with_issues>
          <with_issues>http://b3789e93786d.ngrok.io/index.php</with_issues>
          <without_issues>http://b3789e93786d.ngrok.io/js/main.js</without_issues>
          <with_issues>http://b3789e93786d.ngrok.io/login</with_issues>
          <with_issues>http://b3789e93786d.ngrok.io/logout</with_issues>
          <without_issues>http://b3789e93786d.ngrok.io/password/reset</without_issues>
          <with_issues>http://b3789e93786d.ngrok.io/password/reset/Arachni-e726fec99e34eb4301257a91f6c15ec4</with_issues>
          <without_issues>http://b3789e93786d.ngrok.io/v2.0dev</without_issues>
        </map>
        <total>35</total>
        <with_issues>8</with_issues>
        <without_issues>27</without_issues>
        <issue_percentage>23</issue_percentage>
      </results>
    </healthmap>
  </plugins>
</report>
